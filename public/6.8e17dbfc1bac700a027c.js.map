{"version":3,"sources":["webpack:///./client/components/stores/edit/index.js","webpack:///./client/components/FormField.js?991d","webpack:///./client/components/FormSelect.js?638f","webpack:///./client/components/orders/orderForms/SelectTailor.js?a41b","webpack:///./client/components/stores/edit/ducks/actions.js?7cd5","webpack:///./client/components/users/edit/EditPassword.js"],"names":["mapStateToProps","store","editStore","tailors","tailorList","userRoles","currentUser","mapDispatchToProps","getEditStore","updateStore","updateEditStore","setGrowler","setLoader","removeLoader","dispatch","StoresEdit","updateState","field","value","props","handleSubmit","e","preventDefault","self","then","res","data","body","errors","kind","message","setState","catch","console","log","err","paramsId","match","params","store_id","userStoreId","user","admin","storeId","tailorId","name","phone","street","street_two","city","state_province","zip_code","default_tailor_id","displayPhone","renderTailorSelect","renderForm","propTypes","object","isRequired","func","FormField","title","fieldName","onChange","className","type","inputType","target","addPleaseSelect","id","concat","options","FormSelect","selectOptions","renderOptions","map","option","index","getTailorList","SelectTailor","headerText","array","provider_id","string","require","getCurrentStore","validateToken","setTokens","url","get","setEditStore","agrees_to_terms","storeObj","address","put","updatePassword","EditPassword","key","validatePasswords","state","password","passwordConfirmation","password_confirmation","submitDisabled","paramsStoreId","userId","paramsUserId","user_id","storeIdMatch","userIdMatch"],"mappings":"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","file":"6.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport { Link } from 'react-router-dom';\n\nimport { formatPhone } from '../../../utils/format';\n\nimport {\n  getEditStore,\n  // updateEditStore is an action that will update the editStoreFormReducer\n  updateEditStore,\n  // updateStore is an action that will send a request to update the store\n  // in the Rails API\n  updateStore,\n  setGrowler,\n  setLoader,\n  removeLoader,\n} from './ducks/actions';\n\nimport FormField from './../../FormField';\nimport SectionHeader from './../../SectionHeader';\nimport EditPassword from '../../users/edit/EditPassword';\nimport SelectTailor from '../../orders/orderForms/SelectTailor';\n\nimport Footer from '../../footer/';\n\nconst mapStateToProps = store => {\n  return {\n    store: store.editStore,\n    tailors: store.tailorList,\n    userRoles: store.userRoles,\n    currentUser: store.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getEditStore,\n      updateStore,\n      updateEditStore,\n      setGrowler,\n      setLoader,\n      removeLoader,\n    },\n    dispatch\n  );\n};\n\nclass StoresEdit extends Component {\n  static propTypes = {\n    store: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    getEditStore: PropTypes.func.isRequired, // mapDispatchToProps\n    updateStore: PropTypes.func.isRequired, // mapDispatchToProps\n    updateEditStore: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps,\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps,\n  };\n\n  componentDidMount() {\n    const {\n      getEditStore,\n      match: { params: { store_id: paramsId } },\n      currentUser: { user: { store_id: userStoreId } },\n      userRoles: { admin },\n    } = this.props;\n\n    const storeId = admin ? paramsId : userStoreId;\n\n    getEditStore(storeId).catch(err => console.log(err));\n  }\n\n  updateState = (field, value) => {\n    this.props.updateEditStore(field, value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    var self = this;\n    const { store } = this.props;\n    this.props.setLoader();\n    this.props\n      .updateStore({ store })\n      .then(res => {\n        this.props.removeLoader();\n\n        if (res.data.body.errors) {\n          const kind = 'warning';\n          const message = res.data.body.errors[0];\n          self.setState(self.props.store);\n          self.props.setGrowler({ kind, message });\n        } else if (res.data.body) {\n          const kind = 'success';\n          const message = 'Store Updated Successfully!';\n          this.props.setGrowler({ kind, message });\n        }\n      })\n      .catch(err => {\n        debugger;\n        console.log(err);\n      });\n  };\n\n  renderTailorSelect(tailorId, admin) {\n    if (admin) {\n      return (\n        <SelectTailor\n          onChange={this.updateState}\n          fieldName=\"default_tailor_id\"\n          headerText=\"Set Default Tailor\"\n          tailorId={tailorId}\n        />\n      );\n    }\n  }\n\n  renderForm() {\n    const {\n      name,\n      phone,\n      street,\n      street_two,\n      city,\n      state_province,\n      zip_code,\n      default_tailor_id,\n    } = this.props.store;\n\n    const displayPhone = formatPhone(phone);\n\n    const { admin } = this.props.userRoles;\n\n    const tailorId = default_tailor_id ? default_tailor_id : '';\n\n    return (\n      <div>\n        <form onSubmit={e => this.handleSubmit(e)}>\n          <FormField\n            value={name}\n            fieldName={'name'}\n            title={'Name'}\n            onChange={this.updateState}\n          />\n\n          <FormField\n            value={displayPhone}\n            fieldName={'phone'}\n            title={'Phone'}\n            onChange={this.updateState}\n          />\n\n          {this.renderTailorSelect(tailorId, admin)}\n\n          <FormField\n            value={street}\n            fieldName={'street'}\n            title={'Street'}\n            onChange={this.updateState}\n          />\n\n          <FormField\n            value={street_two}\n            fieldName={'street_two'}\n            title={'Unit, Suite, Etc. (optional)'}\n            onChange={this.updateState}\n          />\n\n          <FormField\n            value={city}\n            fieldName={'city'}\n            title={'City'}\n            onChange={this.updateState}\n          />\n\n          <FormField\n            value={state_province}\n            fieldName={'state_province'}\n            title={'State'}\n            onChange={this.updateState}\n          />\n\n          <FormField\n            value={zip_code}\n            fieldName={'zip_code'}\n            title={'Zip'}\n            onChange={this.updateState}\n          />\n          <input className=\"short-button\" type=\"submit\" value=\"Update Store\" />\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    const { store } = this.props;\n\n    if (isEmpty(store)) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"pos-rel\">\n        <SectionHeader text={`Account / ${store.name}`} />\n        <div className=\"form-container edit-account\">\n          {this.renderForm()}\n          <br />\n          <hr />\n          <br />\n          <EditPassword match={this.props.match} />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoresEdit);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/stores/edit/index.js","import React from 'react';\n\nconst FormField = props => {\n  const { title, value, fieldName, onChange, className, type } = props;\n  const inputType = type ? type : 'text';\n  return (\n    <div>\n      <label className=\"form-label\">{title}</label>\n      <br />\n      <input\n        type={inputType}\n        className={`form-input ${className}`}\n        size=\"50\"\n        value={value}\n        onChange={e => onChange(fieldName, e.target.value)}\n      />\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormField.js","import React from 'react';\n\nconst addPleaseSelect = options => {\n  return [{ id: '', name: 'Please Select' }].concat(options);\n};\n\nconst FormSelect = props => {\n  const selectOptions = addPleaseSelect(props.options);\n  return (\n    <div>\n      <label>{props.title}</label>\n      <br />\n      <select\n        value={props.value}\n        onChange={e => props.onChange(props.fieldName, e.target.value)}\n      >\n        {renderOptions(selectOptions)}\n      </select>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst renderOptions = options => {\n  return options.map((option, index) => {\n    return (\n      <option key={index} value={option.id}>\n        {option.name}\n      </option>\n    );\n  });\n};\n\nexport default FormSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormSelect.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\n\nimport { getTailorList } from '../../../actions';\n\nimport FormSelect from '../../FormSelect';\n\nconst mapStateToProps = store => {\n  return {\n    tailors: store.tailorList,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ getTailorList }, dispatch);\n};\n\nclass SelectTailor extends Component {\n  static propTypes = {\n    tailors: PropTypes.array.isRequired, // mapStateToProps\n    getTailorList: PropTypes.func.isRequired, // mapDispatchToProps\n    onChange: PropTypes.func.isRequired, // parentComponent\n    provider_id: PropTypes.string, // parentComponent\n  };\n\n  componentDidMount() {\n    this.props.getTailorList().catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      tailors,\n      onChange,\n      tailorId,\n      handleSubmit,\n      fieldName = 'provider_id',\n      title = 'Tailor Shop:',\n      headerText = 'Select Tailor',\n    } = this.props;\n\n    if (isEmpty(tailors)) {\n      return <div />;\n    }\n\n    return (\n      <div className={'SelectTailor'}>\n        <h3>{headerText}</h3>\n        <FormSelect\n          value={tailorId}\n          options={tailors}\n          fieldName={fieldName}\n          title={title}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTailor);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/orderForms/SelectTailor.js","import Axios from 'axios';\nimport { SET_EDIT_STORE, UPDATE_EDIT_STORE, expressApi } from './constants';\n\nexport const {\n  getCurrentStore,\n  setGrowler,\n  setLoader,\n  removeLoader,\n  validateToken,\n  setTokens,\n} = require('../../../../actions');\n\nexport const getEditStore = id => {\n  const url = `${expressApi}/stores/${id}`;\n  return dispatch => {\n    return validateToken()\n      .then(setTokens)\n      .then(() => {\n        return Axios.get(url)\n          .then(res => {\n            dispatch(setEditStore(res.data.body));\n            return res;\n          })\n          .catch(err => {\n            debugger;\n          });\n      });\n  };\n};\n\nexport function updateStore(data) {\n  const {\n    store,\n    store: {\n      id,\n      street,\n      street_two,\n      city,\n      state_province,\n      zip_code,\n      agrees_to_terms,\n    },\n  } = data;\n\n  const url = `${expressApi}/stores/${id}`;\n  const storeObj = { ...data.store };\n  storeObj.address = { street, street_two, city, state_province, zip_code };\n\n  return dispatch => {\n    return validateToken(dispatch)\n      .then(setTokens)\n      .then(() => {\n        return Axios.put(url, { store: storeObj })\n          .then(res => {\n            if (!res.data.body.errors) {\n              dispatch(setEditStore(storeObj));\n            }\n            return res;\n          })\n          .catch(err => {\n            debugger;\n            return err;\n          });\n      });\n  };\n}\n\nconst setEditStore = store => {\n  return {\n    type: SET_EDIT_STORE,\n    store,\n  };\n};\n\nexport const updateEditStore = (field, value) => {\n  if (field === 'provider_id') {\n    field = 'default_tailor_id';\n  }\n\n  return {\n    type: UPDATE_EDIT_STORE,\n    store: { [field]: value },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/stores/edit/ducks/actions.js","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updatePassword, setGrowler } from '../../../actions';\nimport FormField from '../../FormField';\nimport { ValidatePassword } from '../../../utils/validations';\n\nconst mapStateToProps = store => {\n  return {\n    user: store.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePassword, setGrowler }, dispatch);\n};\n\nclass EditPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      passwordConfirmation: '',\n      submitDisabled: true,\n    };\n  }\n\n  updateState = (key, value) => {\n    this.setState({ [key]: value }, () => {\n      this.validatePasswords(\n        this.state.password,\n        this.state.passwordConfirmation\n      );\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    if (password === passwordConfirmation) {\n      const id = this.props.user.user.id;\n      this.props\n        .updatePassword({\n          id,\n          password,\n          password_confirmation: passwordConfirmation,\n        })\n        .then(res => {\n          const kind = 'success';\n          const message = 'Password Updated';\n          this.props.setGrowler({ kind, message });\n          this.setState({\n            password: '',\n            passwordConfirmation: '',\n            submitDisabled: true,\n          });\n        })\n        .catch(err => console.log('err', err));\n    }\n  };\n\n  validatePasswords(password, passwordConfirmation) {\n    if (password === passwordConfirmation) {\n      if (ValidatePassword(password)) {\n        this.setState({ submitDisabled: false });\n        return;\n      }\n    }\n    this.setState({ submitDisabled: true });\n  }\n\n  storeIdMatch() {\n    const {\n      user: { user: { store_id: userStoreId } },\n      match: { params: { store_id: paramsStoreId } },\n    } = this.props;\n\n    return userStoreId == paramsStoreId;\n  }\n\n  userIdMatch() {\n    const {\n      user: { user: { id: userId } },\n      match: { params: { user_id: paramsUserId } },\n    } = this.props;\n\n    return userId == paramsUserId;\n  }\n  render() {\n    if (this.storeIdMatch() || this.userIdMatch()) {\n      const { password, passwordConfirmation, submitDisabled } = this.state;\n      return (\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <FormField\n              value={password}\n              type=\"password\"\n              fieldName=\"password\"\n              title=\"New Password\"\n              onChange={this.updateState}\n            />\n\n            <FormField\n              value={passwordConfirmation}\n              fieldName=\"passwordConfirmation\"\n              title=\"Password Confirmation\"\n              type=\"password\"\n              onChange={this.updateState}\n            />\n\n            <input\n              disabled={submitDisabled}\n              type=\"submit\"\n              value=\"Update Password\"\n              className=\"short-button\"\n            />\n          </form>\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPassword);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/edit/EditPassword.js"],"sourceRoot":""}