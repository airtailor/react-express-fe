{"version":3,"sources":["webpack:///./client/components/reports/orders/index.js","webpack:///./client/components/reports/orders/OrderReportRows.js","webpack:///./client/components/reports/orders/ducks/actions.js"],"names":["mapStateToProps","report","store","currentReport","mapDispatchToProps","getCurrentReport","setLoader","removeLoader","dispatch","OrdersReport","props","start_date","end_date","orders","renderReportHeaders","propTypes","object","isRequired","func","OrderReportRows","map","order","index","id","fulfilled_date","retailerName","retailer","name","tailorName","tailor","total","formattedDate","format","route","toFixed","renderReportRows","array","require","validateToken","setTokens","url","then","get","setCurrentReport","res","data","body","catch","type"],"mappings":"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","file":"12.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport WithSectionHeader from '../../HOC/WithSectionHeader';\nimport OrderReportRows from './OrderReportRows';\nimport { setLoader, removeLoader, getCurrentReport } from './ducks/actions';\n\nconst mapStateToProps = store => {\n  return {\n    report: store.currentReport,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { getCurrentReport, setLoader, removeLoader },\n    dispatch\n  );\n};\n\nclass OrdersReport extends Component {\n  static propTypes = {\n    report: PropTypes.object.isRequired, // mapStateToProps\n    getCurrentReport: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  componentDidMount() {\n    this.props.getCurrentReport();\n  }\n\n  renderReportHeaders() {\n    return (\n      <div>\n        <div className=\"report-headers-container\">\n          <div className=\"report-headers-row\">\n            <h3 className=\"report-header-cell\">Order</h3>\n            <h3 className=\"report-header-cell\">Total</h3>\n            <h3 className=\"report-header-cell\">Fulfilled</h3>\n            <h3 className=\"report-header-cell\">Tailor</h3>\n            <h3 className=\"report-header-cell\">retailer</h3>\n          </div>\n        </div>\n        <div className=\"report-header-break-row\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { start_date, end_date, orders } = this.props.report;\n    return (\n      <div>\n        <div className=\"reports-container\">\n          <h1>Current Orders Report</h1>\n          <p>Start Date: {start_date}</p>\n          <p>End Date: {end_date}</p>\n          <Link to=\"/admin/reports\">All Reports</Link>\n        </div>\n        {this.renderReportHeaders()}\n        <OrderReportRows orders={orders} />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  WithSectionHeader(OrdersReport)\n);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/reports/orders/index.js","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass OrderReportRows extends Component {\n  static propTypes = {\n    orders: PropTypes.array.isRequired, // parentComponent\n  };\n\n  renderReportRows() {\n    const { orders } = this.props;\n    return orders.map((order, index) => {\n      const {\n        id,\n        fulfilled_date,\n        retailer: { name: retailerName },\n        tailor: { name: tailorName },\n        total,\n      } = order;\n\n      const formattedDate = moment(fulfilled_date).format('MM-DD-YYYY');\n\n      const route = `/orders/${id}`;\n\n      return (\n        <div key={index}>\n          <div className=\"report-row-container\">\n            <div className=\"report-row\">\n              <Link to={route} className=\"report-row-link\">\n                <div className=\"report-cell\">#{id}</div>\n                <div className=\"report-cell\">${total.toFixed(2)}</div>\n                <div className=\"report-cell\">{formattedDate}</div>\n                <div className=\"report-cell\">{tailorName}</div>\n                <div className=\"report-cell\">{retailerName}</div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"orders\">\n        <div className=\"reports-container\">{this.renderReportRows()}</div>\n      </div>\n    );\n  }\n}\n\nexport default OrderReportRows;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/reports/orders/OrderReportRows.js","import Axios from 'axios';\nimport { SET_CURRENT_REPORT, expressApi } from './constants';\n\nexport const {\n  setLoader,\n  removeLoader,\n  validateToken,\n  setTokens,\n} = require('../../../../actions');\n\nexport const getCurrentReport = () => {\n  const url = `/api/reports/currentReport`;\n  return dispatch => {\n    return validateToken()\n      .then(setTokens)\n      .then(() => {\n        return Axios.get(url)\n          .then(res => {\n            dispatch(setCurrentReport(res.data.body));\n            return res;\n          })\n          .catch(err => {\n            debugger;\n          });\n      });\n  };\n};\n\nconst setCurrentReport = report => {\n  return {\n    type: SET_CURRENT_REPORT,\n    report,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/reports/orders/ducks/actions.js"],"sourceRoot":""}