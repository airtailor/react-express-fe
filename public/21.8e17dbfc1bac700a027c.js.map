{"version":3,"sources":["webpack:///./client/components/orders/new/OrderConfirmation.js"],"names":["mapStateToProps","confirmedNewOrder","store","cartCustomer","currentStore","mapDispatchToProps","resetCart","setConfirmedNewOrder","setGrowler","dispatch","OrderConfirmation","kind","message","props","customer","first_name","last_name","phone","email","garment","alterations","map","alt","index","name","garments","renderGarmentAlterations","items","renderGarments","newOrderLink","id","customerInfo","street","street_two","city","state_province","zip_code","ship_to_store","renderShipToStore","renderShipToCustomer","renderCustomerInfo","renderOrderInfo","renderShippingInfo","total","toFixed","renderButtons","propTypes","object","isRequired","func"],"mappings":"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","file":"21.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { setConfirmedNewOrder, resetCart, setGrowler } from '../../../actions';\nimport { formatPhone } from '../../../utils/format';\n\nimport SectionHeader from '../../SectionHeader';\n\nconst mapStateToProps = store => {\n  return {\n    confirmedNewOrder: store.confirmedNewOrder,\n    cartCustomer: store.cartCustomer,\n    currentStore: store.currentStore,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      resetCart,\n      setConfirmedNewOrder,\n      setGrowler,\n    },\n    dispatch\n  );\n};\n\nclass OrderConfirmation extends Component {\n  static propTypes = {\n    cartCustomer: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    confirmedNewOrder: PropTypes.object.isRequired, // mapStateToProps\n    resetCart: PropTypes.func.isRequired, // mapDispatchToProps\n    setConfirmedNewOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  componentDidMount() {\n    const kind = 'success';\n    const message = 'Order completed!';\n    this.props.setGrowler({ kind, message });\n  }\n\n  componentWillUnmount() {\n    this.props.resetCart();\n    this.props.setConfirmedNewOrder({});\n  }\n\n  renderCustomerInfo(customer) {\n    const { first_name, last_name, phone, email } = customer;\n    return (\n      <div>\n        <h2>Customer Info:</h2>\n        <p>\n          {first_name} {last_name}\n        </p>\n        <p>{formatPhone(phone)}</p>\n        <p>{email}</p>\n      </div>\n    );\n  }\n\n  renderGarmentAlterations(garment) {\n    return garment.alterations.map((alt, index) => {\n      return (\n        <p key={index} className=\"cart-alteration\">\n          {alt.name}\n        </p>\n      );\n    });\n  }\n\n  renderGarments(garments) {\n    return garments.map((garment, index) => {\n      return (\n        <div key={index}>\n          <h3>\n            {garment.name} #{index + 1}\n          </h3>\n          {this.renderGarmentAlterations(garment)}\n          <hr />\n        </div>\n      );\n    });\n  }\n\n  renderOrderInfo(confirmedNewOrder) {\n    const { items } = confirmedNewOrder;\n    return (\n      <div>\n        <h2>Order Info:</h2>\n        {this.renderGarments(items)}\n      </div>\n    );\n  }\n\n  renderButtons(confirmedNewOrder) {\n    const newOrderLink = `/orders/${confirmedNewOrder.id}`;\n\n    return (\n      <div>\n        <Link to=\"/orders\">\n          <input\n            type=\"submit\"\n            className=\"submit-order-button\"\n            value=\"Manage Orders\"\n          />\n        </Link>\n      </div>\n    );\n  }\n\n  renderShipToCustomer(customerInfo) {\n    const {\n      first_name,\n      last_name,\n      street,\n      street_two,\n      city,\n      state_province,\n      zip_code,\n    } = customerInfo;\n    return (\n      <div>\n        <h2>Ship To Customer:</h2>\n        <p>\n          {first_name} {last_name}\n        </p>\n        <p>{street}</p>\n        {street_two ? <p>{street_two}</p> : ''}\n        <p>\n          {city}, {state_province} {zip_code}\n        </p>\n      </div>\n    );\n  }\n\n  renderShipToStore(store) {\n    const { name, street, street_two, city, state_province, zip_code } = store;\n    return (\n      <div>\n        <h2>Ship To Store:</h2>\n        <p>{name}</p>\n        <p>{street}</p>\n        {street_two ? <p>{street_two}</p> : ''}\n        <p>\n          {city}, {state_province} {zip_code}\n        </p>\n      </div>\n    );\n  }\n\n  renderShippingInfo() {\n    const {\n      currentStore,\n      confirmedNewOrder: { ship_to_store },\n      cartCustomer: customer,\n    } = this.props;\n\n    if (ship_to_store) {\n      return this.renderShipToStore(currentStore);\n    } else if (!ship_to_store) {\n      return this.renderShipToCustomer(customer);\n    }\n  }\n\n  render() {\n    const { confirmedNewOrder, cartCustomer } = this.props;\n\n    return (\n      <div>\n        <SectionHeader text=\"Order Completed\" />\n        <div className=\"order-completed-container\">\n          {this.renderCustomerInfo(cartCustomer)}\n          <br />\n          {this.renderOrderInfo(confirmedNewOrder)}\n          <br />\n          {this.renderShippingInfo()}\n          <br />\n          <h2>Total: ${confirmedNewOrder.total.toFixed(2)}</h2>\n          <br />\n          {this.renderButtons(confirmedNewOrder)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderConfirmation);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/new/OrderConfirmation.js"],"sourceRoot":""}