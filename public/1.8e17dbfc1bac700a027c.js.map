{"version":3,"sources":["webpack:///./client/components/orders/index/index.js","webpack:///./client/components/Checkbox.js","webpack:///./client/components/orders/OrderHelpers.js","webpack:///./client/components/orders/StatusCard.js","webpack:///./client/components/orders/index/RetailerOrderList/OrderHeaders.js","webpack:///./client/components/orders/index/RetailerOrderList/OrderRow.js","webpack:///./client/components/orders/index/RetailerOrderList/OrderRows.js","webpack:///./client/components/orders/index/RetailerOrderList/OrderTabs.js","webpack:///./client/components/orders/index/RetailerOrderList/index.js","webpack:///./client/components/orders/index/TailorOrderList/OrderHeaders.js","webpack:///./client/components/orders/index/TailorOrderList/OrderRow.js","webpack:///./client/components/orders/index/TailorOrderList/OrderRows.js","webpack:///./client/components/orders/index/TailorOrderList/index.js","webpack:///./client/components/orders/index/retailerOrderMgmtControls/CustomerOptions.js","webpack:///./client/components/orders/index/retailerOrderMgmtControls/SendOrder.js","webpack:///./client/components/orders/index/retailerOrderMgmtControls/ShippingOptions.js"],"names":["mapStateToProps","currentUser","store","currentStore","openOrders","storeOrders","userRoles","mapDispatchToProps","getStoreOrders","setLoader","removeLoader","setGrowler","dispatch","StoresShow","props","timer","refreshStoreOrders","paramsId","match","params","store_id","currentUserId","user","id","admin","storeId","setState","loadingOrders","then","catch","console","log","err","handleBulkMailRes","errors","res","data","body","selectedOrderShipments","shipping_label","state","print","window","setTimeout","selectedOrders","Set","Object","keys","map","kind","message","key","handleMessengerRes","alertCustomers","roles","orders","status","toggleOrderSelect","has","order","newSelectedOrders","add","delete","setOrderTabState","showOrderState","markCustomerReceived","orderIds","sortOrdersByStatus","tailor","filter","shipments","noShipments","lastShipment","length","notFulfilled","fulfilled","messengerNotDeliveredYet","delivery_type","arrived","mailShipmentExists","messengerShipmentDelivered","retailer","newInterval","setInterval","clearInterval","headerText","name","propTypes","object","isRequired","array","func","Checkbox","onChange","checked","fieldName","text","labelClass","display","getOrderStatus","late","due_date","customer_alerted","ship_to_store","color","shipmentStatus","dueTime","formatStatusString","statusNum","split","dueDate","todaysDate","Date","momentDueDate","diff","Math","abs","additionalString","toUpperCase","StatusCard","className","string","OrderHeaders","orderHeader","withSelect","isSelect","dateText","OrderRow","customer","alterations_count","created_at","arrival_date","fulfilled_date","first_name","last_name","route","orderIsToggled","orderToggle","displayDate","momentDate","isToday","isSame","yesterday","wasYest","dateTextFormat","format","orderSelect","OrderRows","sortedOrders","OrderTabs","countOrdersByStatus","allTabs","tabs","tab","i","concat","RetailerOrderList","mgmtControls","renderHeaderCell","ordersWithShipments","TailorOrderList","CustomerOptions","customerNotifiedSet","customerNotifiedDisabled","set","size","customerPickupDisabled","justifyContent","SendOrder","hideShow","bool","showOptions","handleSubmit","order_ids","shipment_action","shipment","selection","noSelectedOrders","nextProps","showOptionsVisible","disabled","ShippingOptions","renderMessengerOption","now","float","width","marginTop","selected","updateSelected","e","target","newValue","selectButtonDisabled","border","borderRadius","padding"],"mappings":"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","file":"1.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport {\n  getStoreOrders,\n  setLoader,\n  removeLoader,\n  alertCustomersPickup,\n  customerReceived,\n  setGrowler,\n} from '../../../actions';\n\nimport {\n  imageLoader,\n  waitingForPostmatesUpdate,\n} from '../../shipping/shippingFunctions';\n\nimport RetailerOrderList from './RetailerOrderList/';\nimport TailorOrderList from './TailorOrderList/';\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    currentStore: store.currentStore,\n    openOrders: store.storeOrders,\n    userRoles: store.userRoles,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getStoreOrders,\n      setLoader,\n      removeLoader,\n      setGrowler,\n    },\n    dispatch\n  );\n};\n\nclass StoresShow extends Component {\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    openOrders: PropTypes.array.isRequired, // mapStateToProps\n    getStoreOrders: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      showOrderState: 'new_orders',\n      selectedOrders: new Set(),\n      selectedOrderShipments: [],\n      loadingOrders: true,\n    };\n  }\n\n  componentDidMount() {\n    this.refreshStoreOrders();\n    if (this.props.userRoles.retailer || this.props.userRoles.admin) {\n      this.newInterval = setInterval(this.timer, 10000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.newInterval);\n  }\n\n  timer = () => {\n    if (waitingForPostmatesUpdate(this.props.openOrders)) {\n      this.refreshStoreOrders();\n    }\n  };\n\n  refreshStoreOrders = () => {\n    this.props.setLoader();\n\n    const {\n      getStoreOrders,\n      match: { params: { store_id: paramsId } },\n      currentUser: { user: { id: currentUserId } },\n      userRoles: { admin },\n    } = this.props;\n\n    const storeId = paramsId && admin ? paramsId : currentUserId;\n    this.setState({ loadingOrders: true });\n    getStoreOrders(storeId)\n      .then(res => {\n        this.setState({ loadingOrders: false });\n        this.props.removeLoader();\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleBulkMailRes = res => {\n    const { errors } = res.data.body;\n    if (isEmpty(errors)) {\n      this.setState({ selectedOrderShipments: res.data.body }, () => {\n        const { shipping_label } = this.state.selectedOrderShipments[0];\n\n        const print = () => {\n          window.print();\n\n          setTimeout(() => {\n            this.setState({\n              selectedOrders: new Set(),\n              selectedOrderShipments: [],\n            });\n          }, 1000);\n        };\n        imageLoader(shipping_label, print);\n      });\n    } else {\n      Object.keys(errors).map(key => {\n        this.props.setGrowler({\n          kind: 'warning',\n          message: errors[key][0].message,\n        });\n      });\n    }\n  };\n\n  handleMessengerRes = res => {\n    const kind = 'success';\n    const message = 'Messenger has been requested!';\n\n    this.props.setGrowler({ kind, message });\n    this.setState({ selectedOrders: new Set() });\n  };\n\n  alertCustomers = () => {\n    const { userRoles: roles, currentStore: { id: store_id } } = this.props;\n    const orders = this.state.selectedOrders;\n    this.props.setLoader();\n    alertCustomersPickup(orders, store_id).then(res => {\n      if (res.body.status === 200) {\n        const kind = 'success';\n        const message =\n          'Your customers have been notified to pick up their orders.';\n        this.props.setGrowler({ kind, message });\n        this.props.removeLoader();\n        this.refreshStoreOrders();\n        this.setState({ selectedOrders: new Set() });\n      }\n    });\n  };\n\n  toggleOrderSelect = order => {\n    if (!this.state.selectedOrders.has(order)) {\n      const newSelectedOrders = this.state.selectedOrders;\n      newSelectedOrders.add(order);\n      this.setState({ selectedOrders: newSelectedOrders });\n    } else {\n      const newSelectedOrders = this.state.selectedOrders;\n      newSelectedOrders.delete(order);\n      this.setState({ selectedOrders: newSelectedOrders });\n    }\n  };\n\n  setOrderTabState = state => {\n    this.setState({ showOrderState: state, selectedOrders: new Set() });\n  };\n\n  markCustomerReceived = () => {\n    const orders = this.state.selectedOrders;\n    const {\n      currentStore: { id: store_id },\n      setLoader,\n      removeLoader,\n      setGrowler,\n    } = this.props;\n\n    const orderIds = [...orders].map(order => order.id);\n\n    setLoader();\n    customerReceived(orderIds, store_id)\n      .then(res => {\n        removeLoader();\n        const kind = 'success';\n        const message =\n          'Order has been marked as Completed! You can now view it in the Archive.';\n        setGrowler({ kind, message });\n        this.refreshStoreOrders();\n        this.setState({ selectedOrders: new Set() });\n      })\n      .catch(err => console.log('err'));\n  };\n\n  sortOrdersByStatus = status => {\n    const { openOrders: orders, userRoles: roles } = this.props;\n\n    switch (status) {\n      case 'new_orders':\n        if (roles.tailor) {\n          return orders.filter(\n            order => !isEmpty(order.shipments) && order.tailor\n          );\n        } else {\n          return orders.filter(order => {\n            const { shipments } = order;\n\n            const noShipments = isEmpty(shipments);\n            const lastShipment = shipments[shipments.length - 1];\n            const notFulfilled = !order.fulfilled;\n\n            const messengerNotDeliveredYet =\n              shipments.length > 0 &&\n              lastShipment.delivery_type === 'messenger_shipment' &&\n              lastShipment.status != 'delivered';\n\n            return notFulfilled && (noShipments || messengerNotDeliveredYet);\n          });\n        }\n      case 'in_progress_orders':\n        if (roles.tailor) {\n          return orders.filter(order => order.arrived && !order.fulfilled);\n        } else {\n          return orders.filter(order => {\n            if (isEmpty(order.shipments)) {\n              return false;\n            }\n\n            const { tailor, fulfilled, shipments } = order;\n            const { status, delivery_type } = shipments[shipments.length - 1];\n\n            const mailShipmentExists = delivery_type === 'mail_shipment';\n            const messengerShipmentDelivered = status === 'delivered';\n\n            return (\n              (mailShipmentExists || messengerShipmentDelivered) &&\n              tailor &&\n              !fulfilled\n            );\n          });\n        }\n      case 'ready_orders':\n        return orders.filter(order => order.fulfilled);\n      default:\n        return orders;\n    }\n  };\n\n  render() {\n    if (!this.props.currentStore) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const {\n      userRoles: { tailor, retailer, admin },\n      userRoles,\n      openOrders,\n    } = this.props;\n\n    const {\n      loadingOrders,\n      selectedOrders,\n      selectedOrderShipments,\n      showOrderState,\n    } = this.state;\n\n    const headerText = `Orders / ${this.props.currentStore.name}`;\n\n    if (retailer || admin) {\n      return (\n        <RetailerOrderList\n          showOrderState={showOrderState}\n          loadingOrders={loadingOrders}\n          headerText={headerText}\n          openOrders={openOrders}\n          userRoles={userRoles}\n          selectedOrders={selectedOrders}\n          selectedOrderShipments={selectedOrderShipments}\n          handleBulkMailRes={this.handleBulkMailRes}\n          handleMessengerRes={this.handleMessengerRes}\n          refreshStoreOrders={this.refreshStoreOrders}\n          setOrderTabState={this.setOrderTabState}\n          markCustomerReceived={this.markCustomerReceived}\n          alertCustomers={this.alertCustomers}\n          toggleOrderSelect={this.toggleOrderSelect}\n          sortOrdersByStatus={this.sortOrdersByStatus}\n        />\n      );\n    } else if (tailor) {\n      return (\n        <TailorOrderList\n          headerText={headerText}\n          openOrders={openOrders}\n          loadingOrders={loadingOrders}\n          userRoles={userRoles}\n          sortOrdersByStatus={this.sortOrdersByStatus}\n        />\n      );\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoresShow);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/index.js","import React from 'react';\n\nconst Checkbox = props => {\n  const { onChange, checked, fieldName, text, name, labelClass } = props;\n  if (!fieldName) {\n    return (\n      <div style={{ display: 'inline' }}>\n        <input\n          type=\"checkbox\"\n          id={`${name}-check`}\n          name={name}\n          checked={checked}\n          onChange={onChange}\n        />\n\n        <label\n          htmlFor={`${name}-check`}\n          className={`checkbox-label ${labelClass}`}\n        >\n          <span />\n          {text}\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ display: 'inline' }}>\n      <input\n        type=\"checkbox\"\n        id={`${name}-check`}\n        name={name}\n        checked={checked}\n        onChange={() => onChange(fieldName, !checked)}\n      />\n\n      <label htmlFor={`${name}-check`} className=\"checkbox-label\">\n        <span />\n        {text}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/Checkbox.js","import moment from 'moment';\nimport { isEmpty } from 'lodash';\n\nexport const getOrderStatus = (order, roles) => {\n  const {\n    shipments,\n    arrived,\n    late,\n    due_date,\n    fulfilled,\n    customer_alerted,\n    ship_to_store,\n  } = order;\n\n  const { retailer, admin, tailor } = roles;\n\n  let status, color;\n\n  if (isEmpty(order.shipments)) {\n    status = 'Needs Transit';\n    color = 'red';\n  } else if (!isEmpty(order.shipments) && !order.arrived) {\n    const lastShipment = order.shipments[order.shipments.length - 1];\n    const { delivery_type } = lastShipment;\n\n    if (delivery_type === 'mail_shipment') {\n      status = 'In Transit';\n      color = 'gold';\n    } else if (delivery_type === 'messenger_shipment') {\n      const shipmentStatus = lastShipment.status;\n\n      if (shipmentStatus === 'pending') {\n        status = 'Contacting';\n        color = 'red';\n      } else if (shipmentStatus === 'pickup') {\n        status = 'Picking Up';\n        color = 'goldenrod';\n      } else if (\n        shipmentStatus === 'pickup_complete' ||\n        shipmentStatus === 'dropoff'\n      ) {\n        status = 'Dropping Off';\n        color = 'gold';\n      } else if (shipmentStatus === 'delivered') {\n        status = 'Delivered';\n        color = 'green';\n      }\n    }\n  } else if (order.late && !order.fulfilled) {\n    if (admin || tailor) {\n      const dueTime = formatStatusString(order.due_date, true);\n      status = dueTime;\n    } else if (retailer) {\n      status = 'Delayed';\n    }\n    color = 'red';\n  } else if (\n    order.fulfilled &&\n    !order.customer_alerted //&& order.ship_to_store\n  ) {\n    status = 'In Transit';\n    color = 'gold';\n  } else if (order.fulfilled && order.customer_alerted && order.ship_to_store) {\n    status = 'Notified';\n    color = 'red';\n  } else if (order.arrived && !order.fulfilled) {\n    status = formatStatusString(order.due_date, false);\n    const statusNum = status.split('')[0];\n\n    if (statusNum > 3) {\n      color = 'green';\n    } else if (statusNum > 0) {\n      color = 'gold';\n    } else if (statusNum < 1) {\n      color = 'red';\n    }\n  }\n  return { status, color };\n};\n\nconst formatStatusString = (dueDate, late) => {\n  const todaysDate = moment(new Date());\n  const momentDueDate = moment(dueDate);\n  const diff = Math.abs(momentDueDate.diff(todaysDate, 'days'));\n  const additionalString = late ? ' days late' : ' days to go';\n  const status = (diff + additionalString).toUpperCase();\n  return status;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/OrderHelpers.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StatusCard extends Component {\n  static propTypes = {\n    color: PropTypes.string.isRequired, // parentComponent\n    text: PropTypes.string.isRequired, // parentComponent\n  };\n\n  render() {\n    const { color, text, className } = this.props;\n    return (\n      <div className={`${color} status-card order-data-cell ${className}`}>\n        {text}\n      </div>\n    );\n  }\n}\n\nexport default StatusCard;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/StatusCard.js","import React, { Component } from 'react';\n\nclass OrderHeaders extends Component {\n  orderHeader = (text, withSelect, isSelect) => {\n    if (isSelect) {\n      return <h3 className=\"order-select-header-cell\">{text}</h3>;\n    } else if (withSelect) {\n      return <h3 className=\"order-data-header-cell\">{text}</h3>;\n    } else {\n      return <h3 className=\"order-header-cell-no-select\">{text}</h3>;\n    }\n  };\n\n  render() {\n    const { showOrderState } = this.props;\n\n    let dateText;\n    if (showOrderState === 'new_orders') {\n      dateText = 'Created';\n    } else if (showOrderState === 'in_progress_orders') {\n      dateText = 'Checked In';\n    } else if (showOrderState === 'ready_orders') {\n      dateText = 'Fulfilled';\n    }\n\n    return (\n      <div className=\"order-headers-container\">\n        <div className=\"order-headers-row\">\n          {this.orderHeader('Select:', false, true)}\n          <div className=\"order-data-headers-container\">\n            {this.orderHeader('Order', true, false)}\n            {this.orderHeader(dateText, true, false)}\n            {this.orderHeader('Customer', true, false)}\n            {this.orderHeader('Status', true, false)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderHeaders;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/RetailerOrderList/OrderHeaders.js","import React, { Component } from 'react';\nimport moment from 'moment';\nimport isEmpty from 'lodash/isEmpty';\nimport { Link } from 'react-router-dom';\n\nimport Checkbox from '../../../Checkbox';\nimport StatusCard from '../../StatusCard';\nimport { getOrderStatus } from '../../OrderHelpers';\n\nclass OrderRow extends Component {\n  render() {\n    const {\n      userRoles: roles,\n      order,\n      showOrderState,\n      selectedOrders,\n      toggleOrderSelect,\n    } = this.props;\n\n    const {\n      id,\n      customer,\n      alterations_count,\n      created_at,\n      arrival_date,\n      fulfilled_date,\n    } = order;\n\n    const { first_name, last_name } = customer;\n    const { color, status } = getOrderStatus(order, roles);\n    const route = `/orders/${id}`;\n    const orderIsToggled = selectedOrders.has(order);\n    const orderToggle = () => toggleOrderSelect(order);\n\n    let displayDate;\n    if (showOrderState === 'new_orders') {\n      displayDate = created_at;\n    } else if (showOrderState === 'in_progress_orders') {\n      displayDate = arrival_date;\n    } else if (showOrderState === 'ready_orders') {\n      displayDate = fulfilled_date;\n    }\n\n    const momentDate = moment(displayDate);\n    const isToday = momentDate.isSame(new Date(), 'day');\n    const yesterday = moment(new Date()).add(-1, 'days');\n    const wasYest = momentDate.isSame(yesterday, 'day');\n    const dateTextFormat = isToday\n      ? '[Today,] h:mma'\n      : wasYest ? '[Yesterday,] h:mma' : 'MMM Do, h:mma';\n\n    let dateText = momentDate.format(dateTextFormat);\n    if (dateText === 'Invalid date' && !arrival_date) {\n      dateText = 'Pending';\n    }\n\n    const orderSelect = (\n      <Checkbox\n        checked={orderIsToggled}\n        type=\"checkbox\"\n        name={id}\n        onChange={orderToggle}\n      />\n    );\n\n    return (\n      <div className=\"order-row\" key={id}>\n        <div className=\"order-select-cell\">{orderSelect}</div>\n        <Link to={route} className=\"order-row-link\">\n          <div className=\"order-data-cell\">#{id}</div>\n          <div className=\"order-data-cell\">{dateText}</div>\n          <div className=\"order-data-cell\">\n            {first_name} {last_name}\n          </div>\n          <StatusCard color={color} text={status} />\n        </Link>\n        <div className=\"order-data-break-row\" />\n      </div>\n    );\n  }\n}\n\nexport default OrderRow;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/RetailerOrderList/OrderRow.js","import React, { Component } from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\nimport OrderRow from './OrderRow';\n\nclass OrderRows extends Component {\n  render() {\n    const {\n      openOrders,\n      showOrderState,\n      userRoles,\n      loadingOrders,\n      selectedOrders,\n      toggleOrderSelect,\n      sortOrdersByStatus,\n    } = this.props;\n\n    if (!isEmpty(openOrders)) {\n      const sortedOrders = sortOrdersByStatus(showOrderState);\n      if (!isEmpty(sortedOrders)) {\n        return (\n          <div className=\"order-data-container\">\n            {sortedOrders.map(order => (\n              <OrderRow\n                key={order.id}\n                order={order}\n                userRoles={userRoles}\n                selectedOrders={selectedOrders}\n                toggleOrderSelect={toggleOrderSelect}\n                showOrderState={showOrderState}\n              />\n            ))}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"table-row\">\n            <div className=\"no-orders\">No orders found!</div>\n          </div>\n        );\n      }\n    } else if (loadingOrders) {\n      return (\n        <div className=\"table-row\">\n          <div className=\"loading-orders\">Loading Orders...</div>\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default OrderRows;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/RetailerOrderList/OrderRows.js","import React, { Component } from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\nclass OrderTabs extends Component {\n  countOrdersByStatus = status => {\n    return this.sortOrdersByStatus(status).length;\n  };\n\n  sortOrdersByStatus = status => {\n    const { openOrders: orders, userRoles: roles } = this.props;\n\n    switch (status) {\n      case 'new_orders':\n        if (roles.tailor) {\n          return orders.filter(\n            order => !isEmpty(order.shipments) && order.tailor\n          );\n        } else {\n          return orders.filter(order => {\n            const { shipments } = order;\n\n            const noShipments = isEmpty(shipments);\n            const lastShipment = shipments[shipments.length - 1];\n            const notFulfilled = !order.fulfilled;\n\n            const messengerNotDeliveredYet =\n              shipments.length > 0 &&\n              lastShipment.delivery_type === 'messenger_shipment' &&\n              lastShipment.status != 'delivered';\n\n            return notFulfilled && (noShipments || messengerNotDeliveredYet);\n          });\n        }\n      case 'in_progress_orders':\n        if (roles.tailor) {\n          return orders.filter(order => order.arrived && !order.fulfilled);\n        } else {\n          return orders.filter(order => {\n            if (isEmpty(order.shipments)) {\n              return false;\n            }\n\n            const { tailor, fulfilled, shipments } = order;\n            const { status, delivery_type } = shipments[shipments.length - 1];\n\n            const mailShipmentExists = delivery_type === 'mail_shipment';\n            const messengerShipmentDelivered = status === 'delivered';\n\n            return (\n              (mailShipmentExists || messengerShipmentDelivered) &&\n              tailor &&\n              !fulfilled\n            );\n          });\n        }\n      case 'ready_orders':\n        return orders.filter(order => order.fulfilled);\n      default:\n        return orders;\n    }\n  };\n\n  render() {\n    const allTabs = [\n      {\n        className: 'order-state-tab',\n        status: 'new_orders',\n        text: 'New Orders',\n      },\n      {\n        className: 'order-state-tab',\n        status: 'in_progress_orders',\n        text: 'In Process',\n      },\n      {\n        className: 'order-state-tab',\n        status: 'ready_orders',\n        text: 'In-Store Pickup',\n      },\n    ];\n\n    const tabs = allTabs.map((tab, i) => {\n      if (tab.status === this.props.showOrderState) {\n        tab.className = tab.className.concat(' selected');\n      }\n\n      return (\n        <div\n          key={i}\n          className={tab.className}\n          onClick={() => this.props.setOrderTabState(tab.status)}\n        >\n          <h3>\n            {tab.text} ({this.countOrdersByStatus(tab.status)})\n          </h3>\n        </div>\n      );\n    });\n\n    return <div className=\"order-state-row\">{tabs}</div>;\n  }\n}\n\nexport default OrderTabs;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/RetailerOrderList/OrderTabs.js","import React, { Component } from 'react';\n\nimport SectionHeader from '../../../SectionHeader';\n\nimport OrderTabs from './OrderTabs';\nimport OrderHeaders from './OrderHeaders';\nimport OrderRows from './OrderRows';\n\nimport SendOrder from '../retailerOrderMgmtControls/SendOrder';\nimport CustomerOptions from '../retailerOrderMgmtControls/CustomerOptions';\n\nclass RetailerOrderList extends Component {\n  mgmtControls = () => {\n    const {\n      showOrderState,\n      selectedOrders,\n      selectedOrderShipments,\n      handleBulkMailRes,\n      handleMessengerRes,\n      refreshStoreOrders,\n      markCustomerReceived,\n      alertCustomers,\n    } = this.props;\n\n    if (showOrderState === 'new_orders') {\n      return (\n        <SendOrder\n          selectedOrders={[...selectedOrders]}\n          selectedOrderShipments={[...selectedOrderShipments]}\n          handleBulkMailRes={handleBulkMailRes}\n          handleMessengerRes={handleMessengerRes}\n          refreshStoreOrders={refreshStoreOrders}\n        />\n      );\n    } else if (showOrderState === 'ready_orders') {\n      return (\n        <CustomerOptions\n          selectedOrders={[...selectedOrders]}\n          alertCustomers={alertCustomers}\n          markCustomerReceived={markCustomerReceived}\n        />\n      );\n    }\n  };\n\n  render() {\n    const {\n      headerText,\n      showOrderState,\n      openOrders,\n      userRoles,\n      loadingOrders,\n      selectedOrders,\n      setOrderTabState,\n      toggleOrderSelect,\n      sortOrdersByStatus,\n    } = this.props;\n\n    return (\n      <div>\n        <SectionHeader text={headerText} />\n        <div className=\"orders\">\n          <div className=\"order-state-container\">\n            <OrderTabs\n              userRoles={userRoles}\n              openOrders={openOrders}\n              showOrderState={showOrderState}\n              setOrderTabState={setOrderTabState}\n            />\n          </div>\n          <div>\n            <OrderHeaders showOrderState={showOrderState} />\n          </div>\n          <div className=\"order-header-break-row\" />\n          <div>\n            <OrderRows\n              showOrderState={showOrderState}\n              openOrders={openOrders}\n              userRoles={userRoles}\n              loadingOrders={loadingOrders}\n              selectedOrders={selectedOrders}\n              toggleOrderSelect={toggleOrderSelect}\n              sortOrdersByStatus={sortOrdersByStatus}\n            />\n          </div>\n          <div>{this.mgmtControls()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RetailerOrderList;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/RetailerOrderList/index.js","import React, { Component } from 'react';\n\nclass OrderHeaders extends Component {\n  renderHeaderCell = (text, withSelect, isSelect) => {\n    if (isSelect) {\n      return <h3 className=\"order-select-header-cell\">{text}</h3>;\n    } else if (withSelect) {\n      return <h3 className=\"order-data-header-cell\">{text}</h3>;\n    } else {\n      return <h3 className=\"order-header-cell-no-select\">{text}</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"order-headers-container\">\n        <div className=\"order-headers-row-no-select\">\n          <div className=\"order-headers-container-no-select\">\n            {this.renderHeaderCell('Id', false)}\n            {this.renderHeaderCell('Status', false)}\n            {this.renderHeaderCell('Customer', false)}\n            {this.renderHeaderCell('Quantity', false)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderHeaders;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/TailorOrderList/OrderHeaders.js","import React, { Component } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { getOrderStatus } from '../../OrderHelpers';\n\nclass OrderRow extends Component {\n  render() {\n    const {\n      userRoles: roles,\n      order,\n      order: { id, alterations_count, customer: { first_name, last_name } },\n    } = this.props;\n\n    const { color, status } = getOrderStatus(order, roles);\n\n    const route = `/orders/${id}`;\n    return (\n      <div className=\"order-row\" key={id}>\n        <Link to={route} className=\"order-row-link-no-select\">\n          <div className=\"order-cell-no-select\">#{id}</div>\n          <div style={{ color }} className=\"order-cell-no-select\">\n            {status}\n          </div>\n          <div className=\"order-cell-no-select\">\n            {first_name} {last_name}\n          </div>\n          <div className=\"order-cell-no-select\">{alterations_count}</div>\n        </Link>\n        <div className=\"order-data-break-row\" />\n      </div>\n    );\n  }\n}\n\nexport default OrderRow;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/TailorOrderList/OrderRow.js","import React, { Component } from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\nimport OrderRow from './OrderRow';\n\nclass OrderRows extends Component {\n  render() {\n    const {\n      openOrders,\n      sortOrdersByStatus,\n      loadingOrders,\n      userRoles,\n    } = this.props;\n\n    if (!isEmpty(openOrders)) {\n      const ordersWithShipments = sortOrdersByStatus('new_orders');\n      if (!isEmpty(ordersWithShipments)) {\n        return (\n          <div className=\"order-data-container\">\n            {ordersWithShipments.map((order, i) => (\n              <OrderRow order={order} userRoles={userRoles} key={i} />\n            ))}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"table-row\">\n            <div className=\"no-orders\">No orders found!</div>\n          </div>\n        );\n      }\n    } else if (loadingOrders) {\n      return (\n        <div className=\"table-row\">\n          <div className=\"loading-orders\">Loading Orders...</div>\n        </div>\n      );\n    } else {\n      return <div className=\"table-row\" />;\n    }\n    return <div />;\n  }\n}\n\nexport default OrderRows;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/TailorOrderList/OrderRows.js","import React, { Component } from 'react';\n\nimport SectionHeader from '../../../SectionHeader';\nimport OrderHeaders from './OrderHeaders';\nimport OrderRows from './OrderRows';\n\nclass TailorOrderList extends Component {\n  render() {\n    const {\n      headerText,\n      openOrders,\n      loadingOrders,\n      sortOrdersByStatus,\n      userRoles,\n    } = this.props;\n    return (\n      <div>\n        <SectionHeader text={headerText} />\n        <div className=\"orders\">\n          <div>\n            <OrderHeaders />\n          </div>\n          <div className=\"order-header-break-row\" />\n          <div>\n            <OrderRows\n              openOrders={openOrders}\n              loadingOrders={loadingOrders}\n              sortOrdersByStatus={sortOrdersByStatus}\n              userRoles={userRoles}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TailorOrderList;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/TailorOrderList/index.js","import React, { Component } from 'react';\n\nimport Button from '../../../Button';\n\nclass CustomerOptions extends Component {\n  customerNotifiedSet = () => {\n    const { selectedOrders } = this.props;\n    return new Set(selectedOrders.map(order => order.customer_alerted));\n  };\n\n  customerNotifiedDisabled = () => {\n    const set = this.customerNotifiedSet();\n    return set.size < 1 || set.has(true);\n  };\n\n  customerPickupDisabled = () => {\n    const set = this.customerNotifiedSet();\n    return set.size < 1 || set.has(false);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"flex-container\"\n        style={{ justifyContent: 'space-around' }}\n      >\n        <Button\n          className=\"send-order-button\"\n          onClick={this.props.alertCustomers}\n          disabled={this.customerNotifiedDisabled()}\n          text=\"NOTIFY CUSTOMER\"\n        />\n\n        <Button\n          className=\"send-order-button\"\n          onClick={this.props.markCustomerReceived}\n          disabled={this.customerPickupDisabled()}\n          text=\"CUSTOMER RECEIVED\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default CustomerOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/retailerOrderMgmtControls/CustomerOptions.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Button from '../../../Button';\nimport ShippingOptions from './ShippingOptions';\nimport OrderComplete from '../../../prints/OrderComplete';\n\nimport { shipmentActions } from '../../../shipping/shippingFunctions';\nimport { createShipment, setLoader, removeLoader } from '../../../../actions';\n\nconst mapStateToProps = store => {\n  return {\n    userRoles: store.userRoles,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      setLoader,\n      removeLoader,\n    },\n    dispatch\n  );\n};\n\nclass SendOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showOptions: false,\n    };\n  }\n\n  hideShow = () => {\n    const bool = !this.state.showOptions;\n    this.setState({ showOptions: bool });\n  };\n\n  handleSubmit = selection => {\n    const { selectedOrders } = this.props;\n    const { setLoader, removeLoader, userRoles } = this.props;\n    const order_ids = [...selectedOrders].map(order => order.id);\n\n    setLoader();\n    const shipment_action = shipmentActions([...selectedOrders][0], userRoles);\n\n    createShipment({\n      shipment: { delivery_type: selection, order_ids, shipment_action },\n    }).then(res => {\n      removeLoader();\n      selection === 'mail_shipment'\n        ? this.props.handleBulkMailRes(res)\n        : this.props.handleMessengerRes(res);\n    });\n  };\n\n  noSelectedOrders = selectedOrders => {\n    return selectedOrders.length === 0;\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const noSelectedOrders = this.noSelectedOrders(nextProps.selectedOrders);\n    const showOptionsVisible = this.state.showOptions;\n\n    if (noSelectedOrders && showOptionsVisible) {\n      this.hideShow();\n      this.props.refreshStoreOrders();\n    }\n  }\n\n  render() {\n    const { showOptions } = this.state;\n    const { selectedOrders, selectedOrderShipments } = this.props;\n    const disabled = this.noSelectedOrders(selectedOrders);\n\n    if (showOptions) {\n      return (\n        <div className=\"shipping-option-container\">\n          <ShippingOptions\n            handleSubmit={this.handleSubmit}\n            hideShow={this.hideShow}\n          />\n          <OrderComplete shipmentSet={selectedOrderShipments} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"shipping-option-container\">\n          <Button\n            className=\"send-order-button\"\n            onClick={this.hideShow}\n            disabled={disabled}\n            text=\"SEND ORDER\"\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendOrder);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/retailerOrderMgmtControls/SendOrder.js","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport Checkbox from '../../../Checkbox';\nimport Button from '../../../Button';\n\nimport { messengerAvailable } from '../../../shipping/shippingFunctions';\n\nclass ShippingOptions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selected: null,\n    };\n  }\n\n  updateSelected(name) {\n    const { selected } = this.state;\n    const newValue = name === selected ? null : name;\n    this.setState({ selected: newValue });\n  }\n\n  clearSelection() {\n    this.setState({ selected: null });\n    this.props.hideShow();\n  }\n\n  renderMessengerOption = () => {\n    const now = moment();\n\n    if (messengerAvailable(now)) {\n      return (\n        <div className=\"shipping-option\">\n          <hr style={{ float: 'right', width: '85%', marginTop: '20px' }} />\n          <Checkbox\n            name=\"messenger_shipment\"\n            checked={this.state.selected === 'messenger_shipment'}\n            onChange={e => this.updateSelected(e.target.name)}\n            text=\"Call Postmates Messenger (est. $13)\"\n            labelClass={'shipping-option-label'}\n          />\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const { selected } = this.state;\n    const selectButtonDisabled = selected ? false : true;\n\n    return (\n      <div\n        style={{\n          width: '380px',\n          border: '3px solid #000033',\n          borderRadius: '8px',\n          padding: '30px',\n          marginTop: '50px',\n        }}\n      >\n        <div className=\"shipping-option\">\n          <Checkbox\n            name=\"mail_shipment\"\n            checked={selected === 'mail_shipment'}\n            onChange={e => this.updateSelected(e.target.name)}\n            text=\"Print USPS Shipping Label (est. $6)\"\n            labelClass={'shipping-option-label'}\n          />\n        </div>\n\n        {this.renderMessengerOption()}\n        <br />\n\n        <div\n          className=\"flex-container\"\n          style={{ justifyContent: 'space-between' }}\n        >\n          <Button\n            className=\"send-order-button\"\n            onClick={this.props.hideShow}\n            disabled={false}\n            text=\"CANCEL\"\n          />\n\n          <Button\n            className=\"send-order-button\"\n            onClick={() => this.props.handleSubmit(selected)}\n            disabled={selectButtonDisabled}\n            text=\"SELECT\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShippingOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/index/retailerOrderMgmtControls/ShippingOptions.js"],"sourceRoot":""}