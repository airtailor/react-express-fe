{"version":3,"sources":["webpack:///./client/components/users/edit/index.js","webpack:///./client/components/FormField.js?991d*","webpack:///./client/components/FormSelect.js?638f*","webpack:///./client/components/users/SelectRole.js","webpack:///./client/components/users/edit/EditPassword.js?403e"],"names":["mapStateToProps","user","store","currentUser","mapDispatchToProps","updatePassword","setGrowler","dispatch","UsersEdit","updateState","key","value","setState","validatePasswords","state","password","passwordConfirmation","handleSubmit","e","preventDefault","id","props","password_confirmation","then","kind","message","submitDisabled","catch","console","log","err","FormField","title","fieldName","onChange","className","type","inputType","target","addPleaseSelect","name","concat","options","FormSelect","selectOptions","renderOptions","map","option","index","SelectRole","role","validRoles","propTypes","func","isRequired","string","EditPassword","userStoreId","store_id","paramsStoreId","match","params","userId","paramsUserId","user_id","storeIdMatch","userIdMatch"],"mappings":"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","file":"8.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updatePassword, setGrowler } from '../../../actions';\nimport FormField from '../../FormField';\nimport WithSectionHeader from '../../HOC/WithSectionHeader';\nimport { ValidatePassword } from '../../../utils/validations';\nimport EditPassword from './EditPassword';\nimport SelectRole from '../SelectRole';\n\nconst mapStateToProps = store => {\n  return {\n    user: store.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePassword, setGrowler }, dispatch);\n};\n\nclass UsersEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      passwordConfirmation: '',\n      submitDisabled: true,\n    };\n  }\n\n  updateState = (key, value) => {\n    this.setState({ [key]: value }, () => {\n      this.validatePasswords(\n        this.state.password,\n        this.state.passwordConfirmation\n      );\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    if (password === passwordConfirmation) {\n      const id = this.props.user.user.id;\n      this.props\n        .updatePassword({\n          id,\n          password,\n          password_confirmation: passwordConfirmation,\n        })\n        .then(res => {\n          const kind = 'success';\n          const message = 'Password Updated';\n          this.props.setGrowler({ kind, message });\n          this.setState({\n            password: '',\n            passwordConfirmation: '',\n            submitDisabled: true,\n          });\n        })\n        .catch(err => console.log('err', err));\n    }\n  };\n\n  validatePasswords(password, passwordConfirmation) {\n    if (password === passwordConfirmation) {\n      if (ValidatePassword(password)) {\n        this.setState({ submitDisabled: false });\n        return;\n      }\n    }\n    this.setState({ submitDisabled: true });\n  }\n\n  render() {\n    const { password, passwordConfirmation, submitDisabled } = this.state;\n    return (\n      <div>\n        <h2> Edit User </h2>\n        <p> Full Functionality Available Soon </p>\n        {/*\n          <SelectRole {...this.props} />\n          <EditPassword {...this.props} />;\n        */}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  WithSectionHeader(UsersEdit)\n);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/edit/index.js","import React from 'react';\n\nconst FormField = props => {\n  const { title, value, fieldName, onChange, className, type } = props;\n  const inputType = type ? type : 'text';\n  return (\n    <div>\n      <label className=\"form-label\">{title}</label>\n      <br />\n      <input\n        type={inputType}\n        className={`form-input ${className}`}\n        size=\"50\"\n        value={value}\n        onChange={e => onChange(fieldName, e.target.value)}\n      />\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormField.js","import React from 'react';\n\nconst addPleaseSelect = options => {\n  return [{ id: '', name: 'Please Select' }].concat(options);\n};\n\nconst FormSelect = props => {\n  const selectOptions = addPleaseSelect(props.options);\n  return (\n    <div>\n      <label>{props.title}</label>\n      <br />\n      <select\n        value={props.value}\n        onChange={e => props.onChange(props.fieldName, e.target.value)}\n      >\n        {renderOptions(selectOptions)}\n      </select>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst renderOptions = options => {\n  return options.map((option, index) => {\n    return (\n      <option key={index} value={option.id}>\n        {option.name}\n      </option>\n    );\n  });\n};\n\nexport default FormSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormSelect.js","import React, { Component } from 'react';\nimport FormSelect from '../FormSelect';\nimport PropTypes from 'prop-types';\n\nclass SelectRole extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired, // parentComponent\n    role: PropTypes.string.isRequired, // parentComponent\n  };\n\n  render() {\n    const { onChange, role } = this.props;\n\n    if (role && role == 'admin') {\n      return <div />;\n    }\n\n    const validRoles = [\n      { id: 'tailor', name: 'Tailor' },\n      { id: 'retailer', name: 'Retailer' },\n    ];\n\n    return (\n      <div className=\"SelectRole\">\n        <h3>Roles</h3>\n        <FormSelect\n          value={role}\n          options={validRoles}\n          fieldName={'role'}\n          title={'Select Role:'}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SelectRole;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/SelectRole.js","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updatePassword, setGrowler } from '../../../actions';\nimport FormField from '../../FormField';\nimport { ValidatePassword } from '../../../utils/validations';\n\nconst mapStateToProps = store => {\n  return {\n    user: store.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePassword, setGrowler }, dispatch);\n};\n\nclass EditPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      passwordConfirmation: '',\n      submitDisabled: true,\n    };\n  }\n\n  updateState = (key, value) => {\n    this.setState({ [key]: value }, () => {\n      this.validatePasswords(\n        this.state.password,\n        this.state.passwordConfirmation\n      );\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    if (password === passwordConfirmation) {\n      const id = this.props.user.user.id;\n      this.props\n        .updatePassword({\n          id,\n          password,\n          password_confirmation: passwordConfirmation,\n        })\n        .then(res => {\n          const kind = 'success';\n          const message = 'Password Updated';\n          this.props.setGrowler({ kind, message });\n          this.setState({\n            password: '',\n            passwordConfirmation: '',\n            submitDisabled: true,\n          });\n        })\n        .catch(err => console.log('err', err));\n    }\n  };\n\n  validatePasswords(password, passwordConfirmation) {\n    if (password === passwordConfirmation) {\n      if (ValidatePassword(password)) {\n        this.setState({ submitDisabled: false });\n        return;\n      }\n    }\n    this.setState({ submitDisabled: true });\n  }\n\n  storeIdMatch() {\n    const {\n      user: { user: { store_id: userStoreId } },\n      match: { params: { store_id: paramsStoreId } },\n    } = this.props;\n\n    return userStoreId == paramsStoreId;\n  }\n\n  userIdMatch() {\n    const {\n      user: { user: { id: userId } },\n      match: { params: { user_id: paramsUserId } },\n    } = this.props;\n\n    return userId == paramsUserId;\n  }\n  render() {\n    if (this.storeIdMatch() || this.userIdMatch()) {\n      const { password, passwordConfirmation, submitDisabled } = this.state;\n      return (\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <FormField\n              value={password}\n              type=\"password\"\n              fieldName=\"password\"\n              title=\"New Password\"\n              onChange={this.updateState}\n            />\n\n            <FormField\n              value={passwordConfirmation}\n              fieldName=\"passwordConfirmation\"\n              title=\"Password Confirmation\"\n              type=\"password\"\n              onChange={this.updateState}\n            />\n\n            <input\n              disabled={submitDisabled}\n              type=\"submit\"\n              value=\"Update Password\"\n              className=\"short-button\"\n            />\n          </form>\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPassword);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/edit/EditPassword.js"],"sourceRoot":""}