{"version":3,"sources":["webpack:///./client/components/customers/CustomerEdit.js","webpack:///./client/components/FormField.js?991d*****"],"names":["mapStateToProps","currentOrder","store","currentCustomer","currentStore","mapDispatchToProps","setGrowler","getCurrentOrder","getCurrentCustomer","updateCurrentCustomer","dispatch","CustomerEdit","refreshCurrentCustomer","setState","customer","updateState","field","value","customerId","props","match","params","customer_id","e","preventDefault","email","then","kind","message","res","data","body","errors","id","catch","currentOrderId","backLink","first_name","last_name","phone","street","street_two","city","state_province","zip_code","handleSubmit","propTypes","object","isRequired","func","FormField","title","fieldName","onChange","className","type","inputType","target"],"mappings":"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","file":"17.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\n\nimport {\n  updateCustomer,\n  getCurrentCustomer,\n  setGrowler,\n  getCurrentOrder,\n  updateCurrentCustomer,\n} from '../../actions';\n\nimport { ValidateEmail } from '../../utils/validations';\n\nimport FormField from '../FormField.js';\n\nconst mapStateToProps = store => {\n  return {\n    currentOrder: store.currentOrder,\n    currentCustomer: store.currentCustomer,\n    currentStore: store.currentStore,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { setGrowler, getCurrentOrder, getCurrentCustomer, updateCurrentCustomer },\n    dispatch\n  );\n};\n\nclass CustomerEdit extends Component {\n  static propTypes = {\n    currentOrder: PropTypes.object.isRequired, // mapStateToProps\n    currentCustomer: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n    getCurrentOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    getCurrentCustomer: PropTypes.func.isRequired, // mapDispatchToProps\n    updateCurrentCustomer: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  componentDidMount() {\n    const customerId = this.props.match.params.customer_id;\n    this.props.getCurrentCustomer(customerId);\n  }\n\n  refreshCurrentCustomer = customer => {\n    this.setState(customer);\n  };\n\n  updateState = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      currentStore,\n      currentOrder,\n      getCurrentOrder,\n      setGrowler,\n      currentCustomer: customer,\n      currentCustomer: { email },\n    } = this.props;\n\n    if (ValidateEmail(email)) {\n      updateCustomer(customer)\n        .then(res => {\n          let kind, message;\n          if (res.data.body.errors) {\n            kind = 'warning';\n            message = res.data.body.errors[0];\n          } else {\n            kind = 'success';\n            message = 'Customer Updated';\n            getCurrentCustomer(customer.id);\n            getCurrentOrder(currentStore.id, currentOrder.id);\n          }\n          setGrowler({ kind, message });\n        })\n        .catch(err => {});\n    } else {\n      const kind = 'warning';\n      const message = 'Email must be valid';\n      this.props.setGrowler({ kind, message });\n    }\n  }\n\n  render() {\n    const { currentOrder: { id: currentOrderId } } = this.props;\n    const backLink = `/orders/${currentOrderId}`;\n    const {\n      currentCustomer: {\n        email,\n        first_name,\n        last_name,\n        phone,\n        street,\n        street_two,\n        city,\n        state_province,\n        zip_code,\n      },\n      updateCurrentCustomer,\n    } = this.props;\n\n    return (\n      <div>\n        <Link to={backLink}>Back</Link>\n        <form onSubmit={e => this.handleSubmit(e)}>\n          <FormField\n            value={email}\n            fieldName={'email'}\n            title={'Email'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={first_name}\n            fieldName={'first_name'}\n            title={'First Name'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={last_name}\n            fieldName={'last_name'}\n            title={'Last Name'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={phone}\n            fieldName={'phone'}\n            title={'Phone'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={street}\n            fieldName={'street'}\n            title={'Street'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={street_two}\n            fieldName={'street_two'}\n            title={'UNIT, SUITE, ETC. (OPTIONAL)'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={city}\n            fieldName={'city'}\n            title={'City'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={state_province}\n            fieldName={'state_province'}\n            title={'State/Province'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <FormField\n            value={zip_code}\n            fieldName={'zip_code'}\n            title={'Zip Code'}\n            onChange={updateCurrentCustomer}\n          />\n\n          <input className=\"short-button \" type=\"submit\" value=\"Update\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerEdit);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/customers/CustomerEdit.js","import React from 'react';\n\nconst FormField = props => {\n  const { title, value, fieldName, onChange, className, type } = props;\n  const inputType = type ? type : 'text';\n  return (\n    <div>\n      <label className=\"form-label\">{title}</label>\n      <br />\n      <input\n        type={inputType}\n        className={`form-input ${className}`}\n        size=\"50\"\n        value={value}\n        onChange={e => onChange(fieldName, e.target.value)}\n      />\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormField.js"],"sourceRoot":""}