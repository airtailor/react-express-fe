{"version":3,"sources":["webpack:///./client/components/users/UsersNew.js","webpack:///./client/components/FormField.js?991d**","webpack:///./client/components/FormSelect.js?638f**","webpack:///./client/components/users/SelectRole.js?ce60","webpack:///./client/components/users/SelectStore.js"],"names":["mapStateToProps","mapDispatchToProps","setGrowler","dispatch","UsersNew","updateState","key","value","setState","handleSubmit","e","preventDefault","state","password","passwordConfirmation","email","role","storeId","emailIsValid","validateEmail","passwordIsValid","validatePasswords","name","store_id","password_confirmation","then","res","data","kind","message","props","initialStateObject","catch","console","log","err","propTypes","func","isRequired","FormField","title","fieldName","onChange","className","type","inputType","target","addPleaseSelect","id","concat","options","FormSelect","selectOptions","renderOptions","map","option","index","SelectRole","validRoles","string","stores","store","storeList","getStoreList","SelectStore","array"],"mappings":"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","file":"9.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport { createUser, setGrowler } from '../../actions';\nimport FormField from './../FormField';\nimport SectionHeader from './../SectionHeader';\nimport { ValidatePassword, ValidateEmail } from '../../utils/validations';\n\nimport SelectRole from './SelectRole';\nimport SelectStore from './SelectStore';\n\nconst mapStateToProps = store => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setGrowler }, dispatch);\n};\n\nclass UsersNew extends Component {\n  constructor() {\n    super();\n    this.state = this.initialStateObject();\n  }\n\n  static propTypes = {\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  initialStateObject() {\n    return {\n      name: '',\n      email: '',\n      role: '',\n      storeId: '',\n      password: '',\n      passwordConfirmation: '',\n    };\n  }\n\n  updateState = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { password, passwordConfirmation, email, role, storeId } = this.state;\n\n    const emailIsValid = this.validateEmail(email);\n    const passwordIsValid = this.validatePasswords(\n      password,\n      passwordConfirmation\n    );\n    if (emailIsValid && passwordIsValid) {\n      createUser({\n        name,\n        store_id: storeId,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n        role,\n      })\n        .then(res => {\n          // error logging\n          if (res.data === 422) {\n            const kind = 'warning';\n            const message =\n              \"User was not created. Make sure they don't already exist in the database.\";\n            this.props.setGrowler({ kind, message });\n          } else {\n            const kind = 'success';\n            const message = 'User Created!';\n            this.props.setGrowler({ kind, message });\n            this.setState(this.initialStateObject());\n          }\n        })\n        .catch(err => console.log('err', err));\n    }\n  };\n\n  validatePasswords(password, passwordConfirmation) {\n    if (password === passwordConfirmation) {\n      if (ValidatePassword(password)) {\n        return true;\n      } else {\n        const kind = 'warning';\n        const message =\n          'Please enter a valid password! It should be longer than 6 characters';\n        this.props.setGrowler({ kind, message });\n        return false;\n      }\n    } else {\n      const kind = 'warning';\n      const message =\n        'Your password confirmation did not match your chosen password.';\n      this.props.setGrowler({ kind, message });\n      return false;\n    }\n  }\n\n  validateEmail(email) {\n    if (ValidateEmail(email)) {\n      return true;\n    } else {\n      const kind = 'warning';\n      const message = 'Please enter a valid email!';\n      this.props.setGrowler({ kind, message });\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      role,\n      password,\n      storeId,\n      passwordConfirmation,\n    } = this.state;\n    return (\n      <div>\n        <SectionHeader includeLink={false} />\n        <h3>Create User</h3>\n        <form onSubmit={this.handleSubmit}>\n          <FormField\n            value={name}\n            type=\"name\"\n            fieldName={'name'}\n            title={'Name:'}\n            onChange={this.updateState}\n          />\n          <FormField\n            value={email}\n            type=\"email\"\n            fieldName={'email'}\n            title={'Email:'}\n            onChange={this.updateState}\n          />\n          <SelectRole role={role} onChange={this.updateState} />\n          <SelectStore storeId={storeId} onChange={this.updateState} />\n          <FormField\n            value={password}\n            type=\"password\"\n            fieldName={'password'}\n            title={'Password:'}\n            onChange={this.updateState}\n          />\n          <FormField\n            value={passwordConfirmation}\n            fieldName={'passwordConfirmation'}\n            title={'Password Confirmation:'}\n            type=\"password\"\n            onChange={this.updateState}\n          />\n          <input\n            type=\"submit\"\n            disabled={false}\n            value=\"Create User\"\n            className=\"short-button\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersNew);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/UsersNew.js","import React from 'react';\n\nconst FormField = props => {\n  const { title, value, fieldName, onChange, className, type } = props;\n  const inputType = type ? type : 'text';\n  return (\n    <div>\n      <label className=\"form-label\">{title}</label>\n      <br />\n      <input\n        type={inputType}\n        className={`form-input ${className}`}\n        size=\"50\"\n        value={value}\n        onChange={e => onChange(fieldName, e.target.value)}\n      />\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormField.js","import React from 'react';\n\nconst addPleaseSelect = options => {\n  return [{ id: '', name: 'Please Select' }].concat(options);\n};\n\nconst FormSelect = props => {\n  const selectOptions = addPleaseSelect(props.options);\n  return (\n    <div>\n      <label>{props.title}</label>\n      <br />\n      <select\n        value={props.value}\n        onChange={e => props.onChange(props.fieldName, e.target.value)}\n      >\n        {renderOptions(selectOptions)}\n      </select>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst renderOptions = options => {\n  return options.map((option, index) => {\n    return (\n      <option key={index} value={option.id}>\n        {option.name}\n      </option>\n    );\n  });\n};\n\nexport default FormSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormSelect.js","import React, { Component } from 'react';\nimport FormSelect from '../FormSelect';\nimport PropTypes from 'prop-types';\n\nclass SelectRole extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired, // parentComponent\n    role: PropTypes.string.isRequired, // parentComponent\n  };\n\n  render() {\n    const { onChange, role } = this.props;\n\n    if (role && role == 'admin') {\n      return <div />;\n    }\n\n    const validRoles = [\n      { id: 'tailor', name: 'Tailor' },\n      { id: 'retailer', name: 'Retailer' },\n    ];\n\n    return (\n      <div className=\"SelectRole\">\n        <h3>Roles</h3>\n        <FormSelect\n          value={role}\n          options={validRoles}\n          fieldName={'role'}\n          title={'Select Role:'}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SelectRole;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/SelectRole.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getStoreList } from '../../actions';\nimport FormSelect from '../FormSelect';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = store => {\n  return {\n    stores: store.storeList,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ getStoreList }, dispatch);\n};\n\nclass SelectStore extends Component {\n  static propTypes = {\n    stores: PropTypes.array.isRequired, // mapStateToProps\n    getStoreList: PropTypes.func.isRequired, // mapDispatchToProps\n    onChange: PropTypes.func.isRequired, // parentComponent\n    storeId: PropTypes.string, // parentComponent\n  };\n\n  componentDidMount() {\n    const { getStoreList } = this.props;\n    getStoreList().catch(err => console.log(err));\n  }\n\n  render() {\n    const { stores, onChange, storeId } = this.props;\n    if (stores) {\n      return (\n        <div className=\"SelectStore\">\n          <h3>Select Store</h3>\n          <FormSelect\n            value={storeId}\n            options={stores}\n            fieldName={'storeId'}\n            title={'Store:'}\n            onChange={onChange}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectStore);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/users/SelectStore.js"],"sourceRoot":""}