{"version":3,"sources":["webpack:///./client/components/orders/show/index.js","webpack:///./client/components/orders/show/OrderShowTitle.js","webpack:///./client/components/orders/OrderHelpers.js?049f","webpack:///./client/components/AddNotesButton.js?6b29","webpack:///./client/components/CustomerMeasurementsLink.js","webpack:///./client/components/orders/StatusCard.js?f037","webpack:///./client/components/orders/show/CustomerDetails.js","webpack:///./client/components/orders/show/DeliveryDetails.js","webpack:///./client/components/orders/show/OrderNote.js","webpack:///./client/components/orders/show/RenderAlterations.js","webpack:///./client/components/orders/show/RenderGarments.js","webpack:///./client/components/orders/show/RenderOrderDetails.js","webpack:///./client/components/orders/show/RenderOrderNotes.js"],"names":["mapStateToProps","currentUser","store","currentStore","openOrders","storeOrders","currentOrder","userRoles","mapDispatchToProps","getCurrentOrder","updateOrder","setLoader","removeLoader","setGrowler","dispatch","OrdersShow","props","checkOrderIn","orderId","id","storeId","store_id","tailor","data","order","arrived","catch","console","log","err","fulfillOrder","fulfilled","setState","loadingLabel","then","roles","shipmentAction","shipmentType","has","makeShippingLabel","postShipment","orders","action","type","res","body","errors","message","kind","refreshCurrentOrder","renderPrintLabel","disabled","state","onClick","printPrompt","clickArgs","shipmentDiv","window","print","renderNotesForm","displayNotesForm","isTailor","isAdmin","admin","prompt","party","submitNotes","e","updateNotes","target","value","renderToggleNotesFormButton","text","marginLeft","showHideNotesForm","renderPrintInstructions","requesterNotes","requester_notes","providerNotes","provider_notes","customer","firstName","first_name","lastName","last_name","orderNotes","tailorNotes","maxWidth","display","notes","sendingMessenger","order_id","match","params","event","preventDefault","key","orderEditPath","justifyContent","renderCheckOrderIn","renderFulfillOrder","total","float","paddingRight","fontFamily","fontWeight","retailer","width","borderRight","orderTotal","margin","name","renderEditOrderButton","renderOrder","renderOrderControls","propTypes","object","isRequired","array","func","OrderShowTitle","title","string","getOrderStatus","shipments","late","due_date","customer_alerted","ship_to_store","status","color","lastShipment","length","delivery_type","shipmentStatus","dueTime","formatStatusString","statusNum","split","dueDate","todaysDate","Date","momentDueDate","diff","Math","abs","additionalString","toUpperCase","AddNotesButton","CustomerMeasurementsLink","marginTop","StatusCard","className","CustomerDetails","withAddress","street","street_two","city","state_province","zip_code","phone","email","renderCustomerAddress","DeliveryDetails","address","street1","street2","zip","addresses","determineAddress","determineAddressName","displayAddress","renderNewAddress","renderOldAddress","deliveryText","OrderNote","field","RenderAlterations","alt","index","alterations","garment","map","renderAlt","RenderGarments","items","i","item_type","sortedItems","Set","getUniqueItemTypes","item","itemType","sortedItemsIterator","values","sortingItem","currentIter","next","currentValue","done","push","itemCaption","sortItemsByType","renderOrderItems","renderList","RenderOrderDetails","momentDate","created_at","dateTextFormat","format","formatOrderDate","marginBottom","formatOrderTime","RenderOrderNotes","orderNotesTitle","tailorNotesTitle"],"mappings":"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","file":"4.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport {\n  getCurrentOrder,\n  updateOrder,\n  setLoader,\n  removeLoader,\n  setGrowler,\n} from '../../../actions';\n\nimport {\n  shipmentTypes,\n  shipmentActions,\n  labelState,\n  messengerAllowed,\n  fireShipmentCreate,\n} from '../../shipping/shippingFunctions';\n\nimport logoImage from '../../../images/logo.png';\nimport SectionHeader from '../../SectionHeader';\nimport OrderComplete from '../../prints/OrderComplete';\nimport BackButton from '../../BackButton';\nimport RenderGarments from './RenderGarments';\nimport RenderOrderNotes from './RenderOrderNotes';\nimport RenderOrderDetails from './RenderOrderDetails';\nimport CustomerDetails from './CustomerDetails';\nimport CustomerMeasurementsLink from '../../CustomerMeasurementsLink';\nimport AddNotesButton from '../../AddNotesButton';\nimport Button from '../../Button';\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    currentStore: store.currentStore,\n    openOrders: store.storeOrders,\n    currentOrder: store.currentOrder,\n    userRoles: store.userRoles,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getCurrentOrder,\n      updateOrder,\n      setLoader,\n      removeLoader,\n      setGrowler,\n    },\n    dispatch\n  );\n};\n\nclass OrdersShow extends Component {\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    openOrders: PropTypes.array.isRequired, // mapStateToProps\n    currentOrder: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    getCurrentOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    updateOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      notes: '',\n      displayNotesForm: false,\n      loadingLabel: false,\n      sendingMessenger: false,\n    };\n  }\n\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    openOrders: PropTypes.array.isRequired, // mapStateToProps\n    currentOrder: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    getCurrentOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    updateOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  refreshCurrentOrder() {\n    this.props.setLoader();\n    const { order_id } = this.props.match.params;\n    const store_id = this.props.currentStore.id;\n    const { getCurrentOrder } = this.props;\n\n    getCurrentOrder(store_id, order_id)\n      .then(() => this.props.removeLoader())\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.refreshCurrentOrder();\n  }\n\n  updateNotes(notes) {\n    this.setState({ notes });\n  }\n\n  submitNotes(event) {\n    event.preventDefault();\n    const {\n      currentOrder: { id: orderId, store_id: storeId },\n      userRoles: { tailor },\n    } = this.props;\n    const key = tailor ? 'provider_notes' : 'requester_notes';\n    const data = {\n      order: { [key]: this.state.notes, id: orderId, store_id: storeId },\n    };\n\n    this.props\n      .updateOrder(data)\n      .then(res => {\n        const kind = 'success';\n        const message = 'Notes Updated Successfully';\n        this.props.setGrowler({ kind, message });\n        this.setState({ displayNotesForm: false });\n      })\n      .catch(err => console.log(err));\n  }\n\n  checkOrderIn = () => {\n    const {\n      currentOrder: { id: orderId, store_id: storeId },\n      userRoles: { tailor },\n    } = this.props;\n    const data = { order: { id: orderId, store_id: storeId, arrived: true } };\n\n    this.props.updateOrder(data).catch(err => console.log(err));\n  };\n\n  showHideNotesForm() {\n    this.setState({ displayNotesForm: !this.state.displayNotesForm });\n  }\n\n  fulfillOrder = () => {\n    const { currentOrder: { id: orderId, store_id: storeId } } = this.props;\n    const data = { order: { id: orderId, store_id: storeId, fulfilled: true } };\n\n    this.props.setLoader();\n    this.setState({ loadingLabel: true });\n\n    this.props\n      .updateOrder(data)\n      .then(res => {\n        const { currentOrder: order, userRoles: roles } = this.props;\n        const shipmentAction = shipmentActions(order, roles);\n        const shipmentType = shipmentTypes(roles);\n\n        if (shipmentType.has('mail_shipment')) {\n          this.makeShippingLabel(shipmentAction);\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  postShipment = (orders, action, type) => {\n    this.props.setLoader();\n    fireShipmentCreate(orders, action, type)\n      .then(res => {\n        if (res.data.body.errors) {\n          const message = res.data.body.errors[0];\n          const kind = 'warning';\n          this.props.setGrowler({ kind, message });\n        } else {\n          this.refreshCurrentOrder();\n        }\n        this.setState({ loadingLabel: false });\n        this.props.removeLoader();\n      })\n      .catch(err => console.log('err', err));\n  };\n\n  makeShippingLabel = action => {\n    return this.postShipment(\n      [this.props.currentOrder],\n      action,\n      'mail_shipment'\n    );\n  };\n\n  renderEditOrderButton() {\n    const { userRoles: { admin }, currentOrder: order } = this.props;\n    const orderEditPath = `/orders/${order.id}/edit`;\n\n    if (admin) {\n      return (\n        <div>\n          <Link to={orderEditPath}>\n            <input className=\"short-button\" type=\"submit\" value=\"Edit Order\" />\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  renderPrintLabel = () => {\n    const {\n      currentOrder: order,\n      currentOrder: { fulfilled },\n      userRoles: roles,\n      userRoles: { tailor },\n    } = this.props;\n    const disabled = this.state.loadingLabel;\n    const shipmentAction = shipmentActions(order, roles);\n\n    let onClick, printPrompt, clickArgs, shipmentDiv;\n    switch (labelState(roles, order, disabled)) {\n      case 'needs_label':\n        printPrompt = 'CREATE LABEL';\n        onClick = this.makeShippingLabel;\n        clickArgs = shipmentAction;\n        break;\n      case 'in_progress':\n        printPrompt = 'CREATING LABEL';\n      case 'label_created':\n        printPrompt = 'PRINT LABEL';\n        onClick = () => window.print();\n        shipmentDiv = <OrderComplete />;\n        break;\n      default:\n        break;\n    }\n\n    if (fulfilled && tailor) {\n      return (\n        <div>\n          <Button\n            className=\"order-show-control-button\"\n            text={printPrompt}\n            onClick={() => onClick(clickArgs)}\n          />\n          {shipmentDiv}\n        </div>\n      );\n    }\n  };\n\n  renderNotesForm = () => {\n    if (this.state.displayNotesForm) {\n      const {\n        userRoles: { tailor: isTailor, admin: isAdmin },\n        currentOrder,\n      } = this.props;\n\n      let prompt, party;\n\n      if (isTailor) {\n        prompt = 'Update Tailor Notes';\n        party = 'provider_notes';\n      } else if (isAdmin) {\n        prompt = 'Update Order Notes';\n        party = 'requester_notes';\n      }\n\n      return (\n        <form className=\"notes-form\" onSubmit={e => this.submitNotes(e)}>\n          <label>\n            <h3 className=\"sans-serif\">{prompt}</h3>\n            <br />\n\n            <textarea\n              className=\"order-details-notes-textarea\"\n              defaultValue={currentOrder[party]}\n              onChange={e => this.updateNotes(e.target.value)}\n              cols={36}\n              rows={10}\n              placeholder=\"Is this a special order or customer? Enter any important notes about the overall order here to help us serve you best!\"\n            />\n          </label>\n          <br />\n          <input className=\"short-button\" type=\"submit\" value=\"Submit\" />\n          <hr />\n        </form>\n      );\n    } else {\n      return <div />;\n    }\n  };\n\n  renderToggleNotesFormButton = () => {\n    const { displayNotesForm } = this.state;\n    const { userRoles: { tailor, admin }, currentOrder } = this.props;\n    let text = null;\n    if (displayNotesForm) {\n      text = 'Hide';\n    } else {\n      text = tailor ? 'Add Tailor Notes' : 'Add Order Notes';\n    }\n\n    return (\n      <div>\n        <div style={{ marginLeft: '15px' }}>\n          <AddNotesButton\n            text={text}\n            onClick={() => this.showHideNotesForm()}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  renderOrderControls() {\n    return (\n      <div className=\"flex-container\" style={{ justifyContent: 'center' }}>\n        {this.renderCheckOrderIn()}\n        {this.renderFulfillOrder()}\n        {this.renderPrintLabel()}\n      </div>\n    );\n  }\n\n  orderTotal(total) {\n    return (\n      <div>\n        <hr className=\"order-show-line\" />\n        <div style={{ marginLeft: '15px' }}>\n          <h3>\n            <span className=\"form-label\">Total </span>\n            <span\n              style={{\n                float: 'right',\n                paddingRight: '15px',\n                fontFamily: 'Raleway',\n                fontWeight: 600,\n              }}\n            >\n              ${total}\n            </span>\n          </h3>\n        </div>\n        <hr className=\"order-show-line\" />\n      </div>\n    );\n  }\n\n  notes() {\n    const { userRoles: { admin, retailer, tailor } } = this.props;\n    if (retailer) {\n      return <RenderOrderNotes {...this.props} />;\n    } else if (tailor || admin) {\n      return (\n        <div>\n          <RenderOrderNotes {...this.props} />\n          {this.renderToggleNotesFormButton()}\n          {this.renderNotesForm()}\n        </div>\n      );\n    }\n  }\n\n  renderCheckOrderIn() {\n    if (!this.props.currentOrder.arrived && !this.props.userRoles.retailer) {\n      return (\n        <Button\n          className=\"order-show-control-button\"\n          text=\"CHECK IN ORDER\"\n          onClick={this.checkOrderIn}\n        />\n      );\n    }\n  }\n\n  renderFulfillOrder() {\n    const {\n      currentOrder: { arrived, fulfilled },\n      userRoles: { retailer },\n    } = this.props;\n\n    if (arrived && !fulfilled && !retailer) {\n      return (\n        <Button\n          className=\"order-show-control-button\"\n          text=\"FULFILL ORDER\"\n          onClick={this.fulfillOrder}\n        />\n      );\n    }\n  }\n\n  renderOrder() {\n    const {\n      currentOrder: { total, customer, arrived },\n      currentOrder,\n      userRoles: { admin, retailer, tailor },\n    } = this.props;\n\n    return (\n      <div\n        className=\"flex-container\"\n        style={{ justifyContent: 'space-between', maxWidth: '1200px' }}\n      >\n        <div\n          style={{\n            width: '52%',\n            borderRight: '1px solid gray',\n            paddingRight: '3%',\n          }}\n        >\n          <h1 className=\"title\">ORDER #{currentOrder.id}</h1>\n          {!retailer ? this.renderPrintInstructions() : ''}\n\n          <RenderGarments {...this.props} />\n          {!tailor ? this.orderTotal(total) : ''}\n          {this.notes()}\n        </div>\n        <div style={{ float: 'right', width: '40%' }}>\n          <RenderOrderDetails {...this.props} />\n          <hr className=\"order-show-line\" style={{ margin: '20px 0px' }} />\n          <CustomerDetails customer={customer} />\n          <CustomerMeasurementsLink customer={customer} />\n        </div>\n      </div>\n    );\n  }\n\n  renderPrintInstructions = () => {\n    const {\n      currentOrder: {\n        id: orderId,\n        requester_notes: requesterNotes,\n        provider_notes: providerNotes,\n        fulfilled,\n        customer: { first_name: firstName, last_name: lastName },\n      },\n    } = this.props;\n\n    const orderNotes = requesterNotes || 'Not Provided';\n    const tailorNotes = providerNotes || 'Not Provided';\n\n    if (!fulfilled) {\n      return (\n        <div>\n          <Button\n            onClick={window.print}\n            text=\"PRINT INSTRUCTIONS\"\n            className=\"print-instructions-button\"\n          />\n          <div className=\"print print-instructions\">\n            <div>\n              <img src={logoImage} style={{ maxWidth: '100px' }} />\n            </div>\n            <h2>Alterations for Order #{orderId}</h2>\n            <h4>Customer Name: {`${firstName} ${lastName}`}</h4>\n            <RenderGarments {...this.props} />\n            <h3>\n              Order Notes: <p style={{ display: 'inline' }}>{orderNotes}</p>\n            </h3>\n            <h3>\n              Tailor Notes: <p style={{ display: 'inline' }}>{tailorNotes}</p>\n            </h3>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const { currentStore: { name }, currentOrder: order } = this.props;\n    if (isEmpty(order)) {\n      return <div />;\n    }\n    return (\n      <div>\n        <SectionHeader text={`Orders / ${name} / #${order.id}`} />\n        <div className=\"order-show\">\n          <div>\n            <BackButton {...this.props} />\n            {this.renderEditOrderButton()}\n            {this.renderOrder()}\n          </div>\n          {this.renderOrderControls()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersShow);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/index.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OrderShowTitle = props => {\n  return <h5 className=\"order-show-title\">{props.title}</h5>;\n};\n\nOrderShowTitle.propTypes = {\n  title: PropTypes.string.isRequired, // parentComponent\n};\n\nexport default OrderShowTitle;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/OrderShowTitle.js","import moment from 'moment';\nimport { isEmpty } from 'lodash';\n\nexport const getOrderStatus = (order, roles) => {\n  const {\n    shipments,\n    arrived,\n    late,\n    due_date,\n    fulfilled,\n    customer_alerted,\n    ship_to_store,\n  } = order;\n\n  const { retailer, admin, tailor } = roles;\n\n  let status, color;\n\n  if (isEmpty(order.shipments)) {\n    status = 'Needs Transit';\n    color = 'red';\n  } else if (!isEmpty(order.shipments) && !order.arrived) {\n    const lastShipment = order.shipments[order.shipments.length - 1];\n    const { delivery_type } = lastShipment;\n\n    if (delivery_type === 'mail_shipment') {\n      status = 'In Transit';\n      color = 'gold';\n    } else if (delivery_type === 'messenger_shipment') {\n      const shipmentStatus = lastShipment.status;\n\n      if (shipmentStatus === 'pending') {\n        status = 'Contacting';\n        color = 'red';\n      } else if (shipmentStatus === 'pickup') {\n        status = 'Picking Up';\n        color = 'goldenrod';\n      } else if (\n        shipmentStatus === 'pickup_complete' ||\n        shipmentStatus === 'dropoff'\n      ) {\n        status = 'Dropping Off';\n        color = 'gold';\n      } else if (shipmentStatus === 'delivered') {\n        status = 'Delivered';\n        color = 'green';\n      }\n    }\n  } else if (order.late && !order.fulfilled) {\n    if (admin || tailor) {\n      const dueTime = formatStatusString(order.due_date, true);\n      status = dueTime;\n    } else if (retailer) {\n      status = 'Delayed';\n    }\n    color = 'red';\n  } else if (\n    order.fulfilled &&\n    !order.customer_alerted //&& order.ship_to_store\n  ) {\n    status = 'In Transit';\n    color = 'gold';\n  } else if (order.fulfilled && order.customer_alerted && order.ship_to_store) {\n    status = 'Notified';\n    color = 'red';\n  } else if (order.arrived && !order.fulfilled) {\n    status = formatStatusString(order.due_date, false);\n    const statusNum = status.split('')[0];\n\n    if (statusNum > 3) {\n      color = 'green';\n    } else if (statusNum > 0) {\n      color = 'gold';\n    } else if (statusNum < 1) {\n      color = 'red';\n    }\n  }\n  return { status, color };\n};\n\nconst formatStatusString = (dueDate, late) => {\n  const todaysDate = moment(new Date());\n  const momentDueDate = moment(dueDate);\n  const diff = Math.abs(momentDueDate.diff(todaysDate, 'days'));\n  const additionalString = late ? ' days late' : ' days to go';\n  const status = (diff + additionalString).toUpperCase();\n  return status;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/OrderHelpers.js","import React, { Component } from 'react';\nimport { notesImage } from '../images/';\n\nclass AddNotesButton extends Component {\n  render() {\n    const text = this.props.text || 'Add Order Notes';\n    return (\n      <p className=\"clear-button\" onClick={this.props.onClick}>\n        <img src={notesImage} className=\"notes-image\" />\n        <span className=\"blue-link\">{text}</span>\n      </p>\n    );\n  }\n}\n\nexport default AddNotesButton;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/AddNotesButton.js","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { measurementsImage } from '../images/';\n\nconst CustomerMeasurementsLink = props => {\n  return (\n    <div style={{ marginTop: '30px' }}>\n      <img src={measurementsImage} className=\"notes-image\" />\n      <Link\n        to={`/customers/${props.customer.id}/measurements`}\n        className=\"blue-link\"\n      >\n        Customer Measurements\n      </Link>\n    </div>\n  );\n};\n\nexport default CustomerMeasurementsLink;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/CustomerMeasurementsLink.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StatusCard extends Component {\n  static propTypes = {\n    color: PropTypes.string.isRequired, // parentComponent\n    text: PropTypes.string.isRequired, // parentComponent\n  };\n\n  render() {\n    const { color, text, className } = this.props;\n    return (\n      <div className={`${color} status-card order-data-cell ${className}`}>\n        {text}\n      </div>\n    );\n  }\n}\n\nexport default StatusCard;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/StatusCard.js","import React, { Component } from 'react';\nimport OrderShowTitle from './OrderShowTitle';\nimport { formatPhone } from '../../../utils/format';\n\nclass CustomerDetails extends Component {\n  renderCustomerAddress() {\n    if (this.props.withAddress && this.props.customer.street) {\n      const {\n        street,\n        street_two,\n        city,\n        state_province,\n        zip_code,\n      } = this.props.customer;\n\n      return (\n        <div>\n          <OrderShowTitle title={'ADDRESS'} />\n          <p className=\"order-show-p-content\">{street}</p>\n          <p className=\"order-show-p-content\">{street_two}</p>\n          <p className=\"order-show-p-content\">\n            {city}, {state_province} {zip_code}\n          </p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const {\n      customer: { first_name, last_name, phone, email },\n      withAddress,\n    } = this.props;\n\n    return (\n      <div>\n        <OrderShowTitle title={'CUSTOMER'} />\n        <p className=\"order-show-p-content\">{`${first_name} ${last_name}`}</p>\n\n        <OrderShowTitle title={'PHONE'} />\n        <p className=\"order-show-p-content\">{`${formatPhone(phone)}`}</p>\n\n        <OrderShowTitle title={'EMAIL'} />\n        <p className=\"order-show-p-content\">{`${email}`}</p>\n\n        {this.renderCustomerAddress()}\n      </div>\n    );\n  }\n}\n\nexport default CustomerDetails;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/CustomerDetails.js","import React, { Component } from 'react';\nimport OrderShowTitle from './OrderShowTitle';\n\nclass DeliveryDetails extends Component {\n  renderOldAddress(address){\n    return (\n      <div className=\"order-show-p-content\">\n        <p>{address.name || `${address.first_name} ${address.last_name}`}</p>\n        <p>{address.street1}</p>\n        <p>{address.street2}</p>\n        <p>\n          {address.city}, {address.state} {address.zip}\n        </p>\n      </div>\n    );\n  }\n\n  renderNewAddress(address){\n    return (\n      <div className=\"order-show-p-content\">\n        <p>{address.name}</p>\n        <p>{address.street}</p>\n        <p>{address.street_two}</p>\n        <p>\n          {address.city}, {address.state_province} {address.zip_code}\n        </p>\n      </div>\n    );\n  }\n\n\n  determineAddress(){\n    const { ship_to_store, retailer, customer } = this.props.order;\n    if (ship_to_store) {\n      return retailer.address || retailer;\n    } else {\n      if (customer.addresses){\n        return customer.addresses[0] || customer;\n      } else {\n        return customer;\n      }\n    }\n  }\n\n  determineAddressName(){\n    const { ship_to_store, retailer, customer } = this.props.order;\n    if (ship_to_store){\n      return retailer.name;\n    } else {\n      return `${customer.first_name} ${customer.last_name}`;\n    }\n  }\n\n  render() {\n    const { ship_to_store, retailer, customer } = this.props.order;\n\n    const address = this.determineAddress();\n    address.name = this.determineAddressName();\n\n    const displayAddress = address.street ? \n      this.renderNewAddress(address) : \n      this.renderOldAddress(address);\n\n    const deliveryText = ship_to_store\n      ? 'DELIVERY TO STORE'\n      : 'DELIVERY TO CUSTOMER';\n\n    return (\n      <div>\n        <OrderShowTitle title={deliveryText} />\n        { displayAddress }\n      </div>\n    );\n  }\n}\n\nexport default DeliveryDetails;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/DeliveryDetails.js","import React, { Component } from 'react';\nimport OrderShowTitle from './OrderShowTitle';\nclass OrderNote extends Component {\n  render() {\n    const { field, title } = this.props;\n    const notes = this.props.currentOrder[field] || 'Not Provided';\n    return (\n      <div>\n        <OrderShowTitle title={title} />\n        <p className=\"notes\">{notes}</p>\n      </div>\n    );\n  }\n}\n\nexport default OrderNote;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/OrderNote.js","import React, { Component } from 'react';\nimport { isEmpty } from 'lodash';\n\nclass RenderAlterations extends Component {\n  renderAlt(alt, index) {\n    return (\n      <p key={index} className=\"cart-alteration\">\n        <span>{alt.name}</span>\n      </p>\n    );\n  }\n\n  render() {\n    const { alterations } = this.props.garment;\n    if (isEmpty(alterations)) {\n      return <div />;\n    }\n\n    return <div>{alterations.map(this.renderAlt)}</div>;\n  }\n}\n\nexport default RenderAlterations;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/RenderAlterations.js","import React, { Component } from 'react';\nimport { isEmpty } from 'lodash';\nimport { uniqBy } from 'lodash';\nimport RenderAlterations from './RenderAlterations';\nimport OrderShowTitle from './OrderShowTitle';\n\nclass RenderGarments extends Component {\n  getUniqueItemTypes(items) {\n    return uniqBy(\n      items.map(i => {\n        return { type: i.item_type.name, items: [] };\n      }),\n      'type'\n    );\n  }\n\n  sortItemsByType() {\n    const { items } = this.props.currentOrder;\n\n    if (isEmpty(items)) return [];\n\n    const sortedItems = new Set(this.getUniqueItemTypes(items));\n\n    for (var item of items) {\n      const itemType = item.item_type.name;\n      const sortedItemsIterator = sortedItems.values();\n      let sortingItem = true;\n\n      while (sortingItem) {\n        let currentIter = sortedItemsIterator.next();\n        let currentValue = currentIter.value;\n\n        if (currentIter.done) {\n          sortingItem = false;\n        } else if (currentValue.type === itemType) {\n          currentValue.items.push(item);\n        }\n      }\n    }\n\n    return [...sortedItems];\n  }\n\n  renderOrderItems(item, itemType, index) {\n    const itemCaption = `${itemType.type.toUpperCase()} #${index + 1}`;\n    const alt = <RenderAlterations garment={item} />;\n\n    if (isEmpty(item.alterations)) {\n      return <div />;\n    }\n\n    return (\n      <div key={index} style={{ marginLeft: '15px' }}>\n        <h3 style={{ paddingRight: '15px' }}>\n          <OrderShowTitle title={itemCaption} />\n        </h3>\n\n        <span className=\"cart-item\">\n          <RenderAlterations garment={item} />\n        </span>\n      </div>\n    );\n  }\n\n  renderList() {\n    return this.sortItemsByType().map((itemType, index) => {\n      return itemType.items.map((item, index) => {\n        return this.renderOrderItems(item, itemType, index);\n      });\n    });\n  }\n\n  render() {\n    if (isEmpty(this.props.currentOrder.items)) {\n      return <div />;\n    }\n    return <div>{this.renderList()}</div>;\n  }\n}\n\nexport default RenderGarments;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/RenderGarments.js","import React, { Component } from 'react';\nimport moment from 'moment';\nimport OrderShowTitle from './OrderShowTitle';\nimport { getOrderStatus } from '../OrderHelpers';\nimport StatusCard from '../StatusCard';\nimport DeliveryDetails from './DeliveryDetails';\n\nclass RenderOrderDetails extends Component {\n  formatOrderDate(order) {\n    const momentDate = moment(order.created_at);\n    const dateTextFormat = 'MMMM Do, Y';\n    return momentDate.format(dateTextFormat);\n  }\n\n  formatOrderTime(order) {\n    const momentDate = moment(order.created_at);\n    const dateTextFormat = 'h:mma';\n    return momentDate.format(dateTextFormat);\n  }\n\n  render() {\n    const { status, color } = getOrderStatus(\n      this.props.currentOrder,\n      this.props.userRoles\n    );\n\n    return (\n      <div>\n        <OrderShowTitle title=\"ORDER PLACED\" />\n\n        <p className=\"order-show-p-content\">\n          {this.formatOrderDate(this.props.currentOrder)}\n        </p>\n\n        <p style={{ marginBottom: '25px' }} className=\"order-show-p-content\">\n          {this.formatOrderTime(this.props.currentOrder)}\n        </p>\n\n        <OrderShowTitle title=\"STATUS\" />\n        <StatusCard\n          text={status}\n          color={color}\n          className=\"order-show-status-card\"\n        />\n\n        <DeliveryDetails order={this.props.currentOrder} />\n      </div>\n    );\n  }\n}\n\nexport default RenderOrderDetails;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/RenderOrderDetails.js","import React, { Component } from 'react';\nimport OrderNote from './OrderNote';\n\nclass RenderOrderNotes extends Component {\n  render() {\n    const { userRoles: { admin, retailer, tailor } } = this.props;\n    const orderNotesTitle = 'ORDER NOTES';\n    const tailorNotesTitle = 'TAILOR NOTES';\n\n    if (retailer) {\n      return (\n        <OrderNote\n          {...this.props}\n          title={orderNotesTitle}\n          field=\"requester_notes\"\n        />\n      );\n    } else if (tailor) {\n      return (\n        <div>\n          <OrderNote\n            {...this.props}\n            title={orderNotesTitle}\n            field=\"requester_notes\"\n          />\n\n          <OrderNote\n            {...this.props}\n            title={tailorNotesTitle}\n            field=\"provider_notes\"\n          />\n        </div>\n      );\n    } else if (admin) {\n      return (\n        <div>\n          <OrderNote\n            {...this.props}\n            title={tailorNotesTitle}\n            field=\"provider_notes\"\n          />\n          <OrderNote\n            {...this.props}\n            title={orderNotesTitle}\n            field=\"requester_notes\"\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default RenderOrderNotes;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/show/RenderOrderNotes.js"],"sourceRoot":""}