{"version":3,"sources":["webpack:///./client/components/orders/ArchivedOrders.js"],"names":["mapStateToProps","currentUser","store","currentStore","archivedOrders","userRoles","mapDispatchToProps","getArchivedOrders","setLoader","removeLoader","dispatch","ArchivedOrders","props","renderArchivedOrderRows","map","renderArchivedOrderRow","order","state","loadingOrders","renderArchivedOrderHeaders","role","customerOrTailor","quantityOrSource","admin","then","roles","id","tailor","retailer","customer","alterations_count","fulfilledDate","fulfilled_date","format","quantityOrRetailer","name","first_name","last_name","route","color","headerText","archivedOrderHeaders","archivedOrderRows","propTypes","object","isRequired","array","func"],"mappings":"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","file":"0.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\nimport { Redirect, Link } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\n\nimport { getArchivedOrders, setLoader, removeLoader } from '../../actions';\n\nimport SectionHeader from '../SectionHeader';\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    currentStore: store.currentStore,\n    archivedOrders: store.archivedOrders,\n    userRoles: store.userRoles,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { getArchivedOrders, setLoader, removeLoader },\n    dispatch\n  );\n};\n\nclass ArchivedOrders extends Component {\n  constructor(props) {\n    super();\n    this.state = { loadingOrders: true };\n  }\n\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    archivedOrders: PropTypes.array.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    getArchivedOrders: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  componentDidMount() {\n    const { setLoader, removeLoader, getArchivedOrders } = this.props;\n\n    setLoader();\n    getArchivedOrders().then(() => removeLoader());\n  }\n\n  renderArchivedOrderRow(order) {\n    const { userRoles: roles } = this.props;\n    const { id, tailor, retailer, customer, alterations_count } = order;\n\n    const fulfilledDate = moment(order.fulfilled_date).format('MM-DD-YYYY');\n    let customerOrTailor, quantityOrRetailer;\n    if (roles.admin) {\n      if (!tailor || !retailer) {\n        return '';\n      }\n      customerOrTailor = tailor.name;\n      quantityOrRetailer = retailer.name;\n    } else {\n      const { first_name, last_name } = customer;\n      const name = `${first_name} ${last_name}`;\n      customerOrTailor = name;\n      quantityOrRetailer = alterations_count;\n    }\n\n    const route = `/orders/${id}`;\n    return (\n      <div className=\"archive-row\" key={id}>\n        <Link to={route} className=\"archive-link\">\n          <div className=\"archive-order-cell\">#{id}</div>\n          <div className=\"archive-order-cell\" style={{ color: 'green' }}>\n            {fulfilledDate}\n          </div>\n          <div className=\"archive-order-cell\">{customerOrTailor}</div>\n          <div className=\"archive-order-cell\">{quantityOrRetailer}</div>\n        </Link>\n        <div className=\"archive-break-row\" />\n      </div>\n    );\n  }\n\n  renderArchivedOrderRows = () => {\n    const { archivedOrders } = this.props;\n\n    if (!isEmpty(archivedOrders)) {\n      return (\n        <div className=\"archive-container\">\n          {archivedOrders.map(order => this.renderArchivedOrderRow(order))}\n        </div>\n      );\n    } else if (this.state.loadingOrders) {\n      return (\n        <div className=\"table-row\">\n          <div className=\"loading-orders\">Loading Orders...</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"table-row\">\n          <div className=\"no-orders\">No orders found!</div>\n        </div>\n      );\n    }\n  };\n\n  renderArchivedOrderHeaders = () => {\n    const { userRoles: role } = this.props;\n    let customerOrTailor, quantityOrSource;\n\n    if (role.admin) {\n      customerOrTailor = 'Tailor';\n      quantityOrSource = 'Source';\n    } else {\n      customerOrTailor = 'Customer';\n      quantityOrSource = 'Quantity';\n    }\n\n    return (\n      <div>\n        <div className=\"archive-headers-container\">\n          <div className=\"archive-headers-row\">\n            <h3 className=\"archive-header-cell\">Order</h3>\n            <h3 className=\"archive-header-cell\">FulFilled Date</h3>\n            <h3 className=\"archive-header-cell\">{customerOrTailor}</h3>\n            <h3 className=\"archive-header-cell\">{quantityOrSource}</h3>\n          </div>\n        </div>\n        <div className=\"archive-header-break-row\" />\n      </div>\n    );\n  };\n  render() {\n    if (!this.props.currentStore) {\n      return <Redirect to=\"/\" />;\n    }\n    const headerText = `Archived Orders / ${this.props.currentStore.name}`;\n    const archivedOrderHeaders = this.renderArchivedOrderHeaders;\n    const archivedOrderRows = this.renderArchivedOrderRows;\n\n    return (\n      <div>\n        <SectionHeader text={headerText} />\n        <div className=\"archive\">\n          {archivedOrderHeaders()}\n          {archivedOrderRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArchivedOrders);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/ArchivedOrders.js"],"sourceRoot":""}