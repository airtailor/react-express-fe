{"version":3,"sources":["webpack:///./client/components/admin/NewOrders.js","webpack:///./client/components/FormSelect.js","webpack:///./client/components/orders/orderForms/SelectTailor.js","webpack:///./client/components/admin/NewOrderCustomerDetail.js","webpack:///./client/components/admin/NewOrderDetail.js","webpack:///./client/components/prints/WelcomeKitPrint.js","webpack:///./client/utils/newOrderLists.js"],"names":["mapStateToProps","currentUser","store","currentStore","newOrders","currentOrder","userRoles","currentCustomer","mapDispatchToProps","getNewOrders","getCurrentOrder","setCurrentOrder","getCurrentCustomer","dispatch","NewOrders","selectOrderDetail","props","order","provider_id","id","then","res","customer_id","catch","console","log","err","orders","customerId","orderCustId","name","renderNewOrders","renderOrderDetails","propTypes","object","isRequired","func","addPleaseSelect","concat","options","FormSelect","selectOptions","title","value","onChange","fieldName","e","target","renderOptions","map","option","index","tailors","tailorList","getTailorList","SelectTailor","tailorId","handleSubmit","headerText","array","string","NewOrderCustomerDetail","customer","first_name","last_name","email","phone","city","state_province","zip_code","customerEditLink","updateOrder","setLoader","removeLoader","setGrowler","NewOrderDetail","updateState","field","setState","obj","state","refreshNewOrdersList","message","kind","updateOrderNotes","notes","requester_notes","postShipment","action","type","loadingLabel","selectOrder","makeShippingLabel","fulfillOrder","orderId","storeId","store_id","data","fulfilled","roles","shipmentAction","shipmentType","has","renderButton","disabled","text","params","callback","className","clickArgs","undefined","onClick","printPrompt","shipmentDiv","window","print","renderFulfillButton","renderPrintLabel","event","preventDefault","submitNotes","updateNotes","garment","alterations","alt","garments","renderGarmentAlterations","weight","created_at","total","provider_notes","items","orderDate","format","selectTailor","renderGarments","display","welcomeKit","renderNotes","WelcomeKitPrint","shipping_label","shipments","renderOrders","length","RenderNewOrderList","unassigned","welcome_kits"],"mappings":"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","file":"5.8e17dbfc1bac700a027c.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { \n  getNewOrders, \n  getCurrentOrder, \n  setCurrentOrder, \n  getCurrentCustomer \n} from '../../actions';\n\nimport { bindActionCreators } from 'redux';\nimport { RenderNewOrderList } from '../../utils/newOrderLists';\nimport NewOrderDetail from './NewOrderDetail';\nimport NewOrderCustomerDetail from './NewOrderCustomerDetail';\nimport SectionHeader from '../SectionHeader';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = store => {\n  return {\n    currentUser: store.currentUser,\n    currentStore: store.currentStore,\n    newOrders: store.newOrders,\n    currentOrder: store.currentOrder,\n    userRoles: store.userRoles,\n    currentCustomer: store.currentCustomer,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { getNewOrders, getCurrentOrder, setCurrentOrder, getCurrentCustomer },\n    dispatch\n  );\n};\n\nclass NewOrders extends Component {\n  static propTypes = {\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentCustomer: PropTypes.object.isRequired, // mapStateToProps\n    currentStore: PropTypes.object.isRequired, // mapStateToProps\n    newOrders: PropTypes.object.isRequired, // mapStateToProps\n    currentOrder: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    getNewOrders: PropTypes.func.isRequired, // mapDispatchToProps\n    getCurrentOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    setCurrentOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    getCurrentCustomer: PropTypes.func.isRequired, // mapDispatchToProps\n  };\n\n  selectOrderDetail = order => {\n    this.props\n      .getCurrentOrder(order.provider_id, order.id)\n      .then(res => {\n        this.props.getCurrentCustomer(res.customer_id)\n      })\n      .catch(err => console.log('err', err));\n  };\n\n  componentDidMount() {\n    this.props.setCurrentOrder({});\n    this.props.getNewOrders().catch(err => console.log(err));\n  }\n\n  renderNewOrders(orders) {\n    return (\n      <RenderNewOrderList\n        orders={orders}\n        className={'new-orders'}\n        selectOrder={this.selectOrderDetail}\n      />\n    );\n  }\n\n  renderOrderDetails(){\n    const {\n      currentCustomer: {\n        id: customerId\n      }, \n      currentOrder: {\n        customer_id: orderCustId\n      }\n    } = this.props;\n\n    if (customerId === orderCustId){\n      return (\n        <div>\n          <div className=\"new-order detail-container\">\n            <NewOrderDetail\n              order={this.props.currentOrder}\n              selectOrder={this.selectOrderDetail}\n              getNewOrders={this.props.getNewOrders}\n            />\n          </div>\n          <div className=\"new-order customer-container\">\n            <NewOrderCustomerDetail />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"new-order-page\">\n        <SectionHeader text={`Home / ${this.props.currentStore.name}`} />\n        <div className=\"new-order-container\">\n          <div className=\"new-order list-container\">\n            {this.renderNewOrders(this.props.newOrders)}\n          </div>\n          <div className=\"detail-and-customer\">\n            { this.renderOrderDetails() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewOrders);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/admin/NewOrders.js","import React from 'react';\n\nconst addPleaseSelect = options => {\n  return [{ id: '', name: 'Please Select' }].concat(options);\n};\n\nconst FormSelect = props => {\n  const selectOptions = addPleaseSelect(props.options);\n  return (\n    <div>\n      <label>{props.title}</label>\n      <br />\n      <select\n        value={props.value}\n        onChange={e => props.onChange(props.fieldName, e.target.value)}\n      >\n        {renderOptions(selectOptions)}\n      </select>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst renderOptions = options => {\n  return options.map((option, index) => {\n    return (\n      <option key={index} value={option.id}>\n        {option.name}\n      </option>\n    );\n  });\n};\n\nexport default FormSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/FormSelect.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\n\nimport { getTailorList } from '../../../actions';\n\nimport FormSelect from '../../FormSelect';\n\nconst mapStateToProps = store => {\n  return {\n    tailors: store.tailorList,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ getTailorList }, dispatch);\n};\n\nclass SelectTailor extends Component {\n  static propTypes = {\n    tailors: PropTypes.array.isRequired, // mapStateToProps\n    getTailorList: PropTypes.func.isRequired, // mapDispatchToProps\n    onChange: PropTypes.func.isRequired, // parentComponent\n    provider_id: PropTypes.string, // parentComponent\n  };\n\n  componentDidMount() {\n    this.props.getTailorList().catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      tailors,\n      onChange,\n      tailorId,\n      handleSubmit,\n      fieldName = 'provider_id',\n      title = 'Tailor Shop:',\n      headerText = 'Select Tailor',\n    } = this.props;\n\n    if (isEmpty(tailors)) {\n      return <div />;\n    }\n\n    return (\n      <div className={'SelectTailor'}>\n        <h3>{headerText}</h3>\n        <FormSelect\n          value={tailorId}\n          options={tailors}\n          fieldName={fieldName}\n          title={title}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTailor);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/orders/orderForms/SelectTailor.js","import React, { Component } from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nconst mapStateToProps = store => {\n  return {\n    currentCustomer: store.currentCustomer,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { }, dispatch\n  );\n};\n\nclass NewOrderCustomerDetail extends Component {\n  static propTypes = {\n    currentCustomer: PropTypes.object.isRequired, // mapStateToProps\n  };\n\n  render() {\n    const { currentCustomer: customer } = this.props;\n    if (!isEmpty(customer)) {\n\n      const {\n        id,\n        first_name,\n        last_name,\n        email,\n        phone,\n        city,\n        state_province ,\n        zip_code,\n      } = customer;\n\n      const customerEditLink = `/customers/${id}/edit`;\n\n      return (\n        <div>\n          <h3>Customer Details:</h3>\n          <p>\n            Name: {first_name} {last_name}\n          </p>\n          <p>Email: {email}</p>\n          <p>Phone: {phone}</p>\n          <p>\n            Address: {city}, {state_province} {zip_code}\n          </p>\n          <Link to={customerEditLink}>\n            <button className=\"button short-button\"> Edit Customer</button>\n          </Link>\n        </div>\n      );\n    } else {\n      return <div>Select a Customer</div>;\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewOrderCustomerDetail);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/admin/NewOrderCustomerDetail.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  updateOrder,\n  createShipment,\n  setLoader,\n  removeLoader,\n  setGrowler,\n} from '../../actions';\n\nimport {\n  shipmentTypes,\n  shipmentActions,\n  labelState,\n  makeShippingLabel,\n  fireShipmentCreate,\n} from '../shipping/shippingFunctions';\n\nimport WelcomeKitPrint from '../prints/WelcomeKitPrint.js';\nimport SelectTailor from '../orders/orderForms/SelectTailor';\n\nconst mapStateToProps = store => {\n  return {\n    tailors: store.tailorList,\n    currentUser: store.currentUser,\n    userRoles: store.userRoles,\n    currentCustomer: store.currentCustomer,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { updateOrder, setLoader, removeLoader, setGrowler, },\n    dispatch\n  );\n};\n\nclass NewOrderDetail extends Component {\n  static propTypes = {\n    tailors: PropTypes.array.isRequired, // mapStateToProps\n    currentUser: PropTypes.object.isRequired, // mapStateToProps\n    currentCustomer: PropTypes.object.isRequired, // mapStateToProps\n    userRoles: PropTypes.object.isRequired, // mapStateToProps\n    updateOrder: PropTypes.func.isRequired, // mapDispatchToProps\n    setLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    removeLoader: PropTypes.func.isRequired, // mapDispatchToProps\n    setGrowler: PropTypes.func.isRequired, // mapDispatchToProps\n    order: PropTypes.object.isRequired, // parentComponent\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      loadingLabel: false,\n      notes: '',\n      provider_id: '',\n    };\n  }\n\n  refreshNewOrdersList(props) {\n    const { setLoader, getNewOrders, removeLoader } = this.props;\n    setLoader();\n    getNewOrders()\n      .then(() => removeLoader())\n      .catch(() => removeLoader());\n  }\n\n  componentDidMount() {\n    this.refreshNewOrdersList(this.props);\n  }\n\n  resetState(props) {\n    this.setState(props.order);\n  }\n\n  updateOrderFromProps() {\n    const order = this.props.order;\n    this.setState({ order });\n  }\n\n  updateState = (field, value) => {\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    this.props.setLoader();\n    let obj = this.state;\n    obj.id = this.props.order.id;\n    this.props\n      .updateOrder({ order: obj })\n      .then(res => {\n        this.refreshNewOrdersList({ order: {} });\n        const message = 'Tailor Assigned';\n        const kind = 'success';\n        this.props.setGrowler({ kind, message });\n        this.props.removeLoader();\n      })\n      .catch(err => console.log('errr', err));\n  };\n\n  updateOrderNotes = (notes, order) => {\n    order.requester_notes = notes;\n    this.props.updateOrder({ order }).catch(err => console.log('err', err));\n  };\n\n  postShipment = (orders, action, type) => {\n    this.props.setLoader();\n    fireShipmentCreate(orders, action, type)\n      .then(res => {\n        this.setState({ loadingLabel: false });\n        this.props.removeLoader();\n        this.props.selectOrder(orders[0]);\n      })\n      .catch(err => console.log('err', err));\n  };\n\n  makeShippingLabel = action => {\n    return this.postShipment([this.props.order], action, 'mail_shipment');\n  };\n\n  renderFulfillButton() {\n    return this.renderButton(\n      'Fulfill This Order',\n      { disabled: false },\n      this.fulfillOrder\n    );\n  }\n\n  renderButton(text, params, callback = () => console.log('')) {\n    const className = params.className || 'pink-button';\n    const clickArgs = params.clickArgs || undefined;\n    const disabled = params.disabled;\n    return (\n      <div>\n        <button\n          onClick={() => callback(clickArgs)}\n          disabled={disabled}\n          className={className}\n        >\n          {text}\n        </button>\n      </div>\n    );\n  }\n\n  renderPrintLabel() {\n    const { order, userRoles: roles } = this.props;\n    const disabled = this.state.loadingLabel;\n    const shipmentAction = shipmentActions(order, roles);\n\n    let onClick, printPrompt, clickArgs, shipmentDiv;\n    switch (labelState(roles, order, disabled)) {\n      case 'needs_label':\n        printPrompt = 'Create Label';\n        onClick = this.makeShippingLabel;\n        clickArgs = shipmentAction;\n        break;\n      case 'in_progress':\n        printPrompt = 'Creating Label';\n      case 'label_created':\n        printPrompt = 'Print Label';\n        onClick = () => {\n          this.refreshNewOrdersList();\n          window.print();\n        };\n        // NOTE: we need to make sure that orderComplete gets the correct shipment.\n        shipmentDiv = <WelcomeKitPrint />;\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div>\n        {this.renderButton(\n          printPrompt,\n          { disabled: disabled, clickArgs: clickArgs },\n          onClick\n        )}\n        {shipmentDiv}\n      </div>\n    );\n  }\n\n  fulfillOrder = () => {\n    const { order: { id: orderId, store_id: storeId } } = this.props;\n    const data = { order: { id: orderId, store_id: storeId, fulfilled: true } };\n\n    this.props.setLoader();\n    this.setState({ loadingLabel: true });\n\n    this.props\n      .updateOrder(data)\n      .then(res => {\n        const { order, userRoles: roles } = this.props;\n        const shipmentAction = shipmentActions(order, roles);\n        const shipmentType = shipmentTypes(roles);\n\n        if (shipmentType.has('mail_shipment')) {\n          this.makeShippingLabel(shipmentAction);\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  welcomeKit(order) {\n    if (!order.fulfilled) {\n      return this.renderFulfillButton();\n    } else {\n      return this.renderPrintLabel();\n    }\n  }\n\n  updateNotes(notes) {\n    this.setState({ notes });\n  }\n\n  submitNotes(event) {\n    event.preventDefault();\n\n    const data = {\n      order: {\n        requester_notes: this.state.notes,\n        id: this.props.order.id,\n        store_id: this.props.order.store_id,\n      },\n    };\n\n    const kind = 'success';\n    const message = 'Notes Updated Successfully';\n    this.props\n      .updateOrder(data)\n      .then(res => this.props.setGrowler({ kind, message }))\n      .catch(err => console.log(err));\n  }\n\n  renderNotes() {\n    return (\n      <form className=\"notes-form\" onSubmit={e => this.submitNotes(e)}>\n        <label>\n          <h3>Order Notes:</h3>\n          <br />\n          <textarea\n            cols={43}\n            rows={10}\n            defaultValue={this.props.order['requester_notes']}\n            onChange={e => this.updateNotes(e.target.value)}\n          />\n        </label>\n        <br />\n        <input className=\"short-button\" type=\"submit\" value=\"Submit\" />\n        <hr />\n      </form>\n    );\n  }\n\n  renderGarmentAlterations(garment) {\n    return garment.alterations.map((alt, index) => {\n      return (\n        <p key={index} className=\"cart-alteration\">\n          {alt.name}\n        </p>\n      );\n    });\n  }\n\n  renderGarments(garments) {\n    return garments.map((garment, index) => {\n      return (\n        <div key={index}>\n          <h3>{garment.name}</h3>\n          {this.renderGarmentAlterations(garment)}\n          <hr />\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { order, currentCustomer } = this.props;\n    const { id, weight, created_at, total, provider_notes, items } = order;\n    const { provider_id } = this.state;\n\n    const orderDate = moment(created_at).format('MM-DD-YYYY');\n\n    const selectTailor = (\n      <div>\n        <p>Alterations:</p>\n\n        {this.renderGarments(order.items)}\n        <SelectTailor onChange={this.updateState} tailorId={provider_id} />\n        <button className=\"button short-button\" onClick={this.handleSubmit}>\n          Change Tailor\n        </button>\n      </div>\n    );\n\n    const display =\n      order.type === 'TailorOrder' ? selectTailor : this.welcomeKit(order);\n\n    return (\n      <div className=\"order-details\">\n        <h3>Order Details:</h3>\n        <p>Order ID: {id}</p>\n        <p>Order Weight: {weight}</p>\n        <p>Order Date: {orderDate}</p>\n        <p>Total Charges: ${total}</p>\n        <p>Order Notes:</p>\n        {this.renderNotes()}\n        {display}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewOrderDetail);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/admin/NewOrderDetail.js","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass WelcomeKitPrint extends Component {\n  render() {\n    const {currentOrder} = this.props;\n\n    if (currentOrder) {\n      const {shipping_label} = currentOrder.shipments[0];\n      return (\n        <div className=\"print\">\n          <div className=\"packing-slip-info\">\n            <img\n              className=\"packing-slip-label\"\n              src={shipping_label}\n              alt=\"shipping label\"\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    currentStore: store.currentStore,\n    currentOrder: store.currentOrder,\n  };\n};\n\nexport default connect(mapStateToProps)(WelcomeKitPrint);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/prints/WelcomeKitPrint.js","import React from 'react';\n\nconst renderOrders = (orders, className, selectOrder) => {\n  if (orders.length > 0) {\n    return orders.map((order, index) => {\n      const {id, customer, total} = order;\n      const {first_name, last_name} = customer;\n      return (\n        <li\n          className={`${className}-li`}\n          key={index}\n          onClick={() => selectOrder(order)}\n        >\n          #{order.id} - {first_name} {last_name} - ${total}\n        </li>\n      );\n    });\n  } else {\n    return <p>No New Orders</p>;\n  }\n};\n\nexport const RenderNewOrderList = props => {\n  const {orders, className, selectOrder} = props;\n  return (\n    <div className={`${className}-div`}>\n      <h3>Manage New Orders</h3>\n      <ul className={`${className}-ul`}>\n        {renderOrders(orders.unassigned, className, selectOrder)}\n      </ul>\n\n      <h3>Manage New Kits</h3>\n      <ul className={`${className}-ul`}>\n        {renderOrders(orders.welcome_kits, className, selectOrder)}\n      </ul>\n    </div>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/utils/newOrderLists.js"],"sourceRoot":""}